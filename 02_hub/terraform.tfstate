{
  "version": 4,
  "terraform_version": "1.7.3",
  "serial": 54,
  "lineage": "f4502f71-f977-95bb-6d52-67b9f9b3a84b",
  "outputs": {
    "dns_zone_apps": {
      "value": {
        "name": "apps.houssem17.com",
        "resource_group_name": "rg-lzaks-hub-weu"
      },
      "type": [
        "object",
        {
          "name": "string",
          "resource_group_name": "string"
        }
      ]
    },
    "firewall": {
      "value": {
        "enabled": true,
        "policy_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy",
        "private_ip": "172.16.0.4"
      },
      "type": [
        "object",
        {
          "enabled": "bool",
          "policy_id": "string",
          "private_ip": "string"
        }
      ]
    },
    "vnet_hub": {
      "value": {
        "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub"
      },
      "type": [
        "object",
        {
          "id": "string"
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "azurerm_subscription",
      "name": "subscription_hub",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "display_name": "Microsoft-Azure-T",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725",
            "location_placement_id": "Internal_2014-09-01",
            "quota_id": "Internal_2014-09-01",
            "spending_limit": "Off",
            "state": "Enabled",
            "subscription_id": "38977b70-47bf-4da5-a492-88712fce8725",
            "tags": {
              "Division": "Core",
              "Environment": "Hybrid",
              "Purpose": "UserTenant",
              "TimeZone": "_P29145_France_444350001"
            },
            "tenant_id": "a8f7faa1-3e2e-4d84-a6cb-daf7eb97d6e4",
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "http",
      "name": "firewall_workbook",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "{\n  \"version\": \"Notebook/1.0\",\n  \"items\": [\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"## Azure Firewall Workbook\\r\\n---\\r\\n\"\n      },\n      \"name\": \"text - 23\"\n    },\n    {\n      \"type\": 11,\n      \"content\": {\n        \"version\": \"LinkItem/1.0\",\n        \"style\": \"tabs\",\n        \"links\": [\n          {\n            \"id\": \"20847ce8-91bc-4d8b-b878-a5a41c95c31c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Overview\",\n            \"subTarget\": \"AFOverview\",\n            \"preText\": \"Azure Firewall Overview\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"f564709d-1658-46a1-8b44-892210e13017\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Application rule log statistics\",\n            \"subTarget\": \"AFAppRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"1f6661e2-f873-4d56-879d-4d085d8cf1d4\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Network rule log statistics\",\n            \"subTarget\": \"AFNetRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"ef1548c5-ef55-4eaa-8a81-b049cb93b56c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - DNS Proxy\",\n            \"subTarget\": \"AFDNSProxy\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"18a4a585-2176-4d9f-907c-8e8d5f984efa\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Premium - IDPS\",\n            \"subTarget\": \"AFIDSIPS\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"97dc7364-961d-4c19-a730-7b9024f46b91\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Investigation\",\n            \"subTarget\": \"AFInvestigate\",\n            \"style\": \"link\"\n          }\n        ]\n      },\n      \"name\": \"links - 24\"\n    },\n    {\n      \"type\": 9,\n      \"content\": {\n        \"version\": \"KqlParameterItem/1.0\",\n        \"parameters\": [\n          {\n            \"id\": \"ab7d6c51-d7df-436c-96a2-429163aa50ec\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"TimeRange\",\n            \"type\": 4,\n            \"isRequired\": true,\n            \"isGlobal\": true,\n            \"value\": {\n              \"durationMs\": 7776000000\n            },\n            \"typeSettings\": {\n              \"selectableValues\": [\n                {\n                  \"durationMs\": 300000\n                },\n                {\n                  \"durationMs\": 900000\n                },\n                {\n                  \"durationMs\": 1800000\n                },\n                {\n                  \"durationMs\": 3600000\n                },\n                {\n                  \"durationMs\": 14400000\n                },\n                {\n                  \"durationMs\": 43200000\n                },\n                {\n                  \"durationMs\": 86400000\n                },\n                {\n                  \"durationMs\": 172800000\n                },\n                {\n                  \"durationMs\": 259200000\n                },\n                {\n                  \"durationMs\": 604800000\n                },\n                {\n                  \"durationMs\": 1209600000\n                },\n                {\n                  \"durationMs\": 2419200000\n                },\n                {\n                  \"durationMs\": 2592000000\n                },\n                {\n                  \"durationMs\": 5184000000\n                },\n                {\n                  \"durationMs\": 7776000000\n                }\n              ],\n              \"allowCustom\": false\n            }\n          },\n          {\n            \"id\": \"add90eb3-ff5f-4b19-9658-ff15c8043af5\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Workspaces\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project id, name\\r\\n| order by name desc\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::100\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::100\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"5084e141-6c56-4d7f-bd8a-09f7ef9af1bc\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Resource\",\n            \"label\": \"Azure Firewalls\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| project id, name\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::all\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::all\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"13d9f6e9-9290-4b1e-b0d0-a7c0ebdc1aed\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Help\",\n            \"label\": \"Show Help\",\n            \"type\": 10,\n            \"description\": \"This will show some help information to help you understand the page you are on\",\n            \"isRequired\": true,\n            \"typeSettings\": {\n              \"additionalResourceOptions\": []\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true },\\r\\n { \\\"value\\\": \\\"Change Log\\\", \\\"label\\\": \\\"Change Log\\\"}\\r\\n]\"\n          },\n          {\n            \"id\": \"68f2cb32-03d4-4307-8eb5-1f66dfc09a85\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"FirewallResources\",\n            \"label\": \"Show Resources\",\n            \"type\": 2,\n            \"description\": \"The is only used on the Overview page.\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\", \\\"selected\\\":true},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\" }\\r\\n]\",\n            \"value\": \"No\"\n          },\n          {\n            \"id\": \"53aa8daf-29de-40a1-9147-c0970e32fac4\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"GeoLocation\",\n            \"label\": \"GeoLocationCSV\",\n            \"type\": 2,\n            \"description\": \"Supplied as a value for GeoLocation lookup on queries: Read more here - https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin#ipv4-lookup---matching-rows-only\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"\\r\\n[\\r\\n{\\r\\n\\\"value\\\": \\\"https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv\\\", \\\"label\\\": \\\"GeoLocationDefault\\\", \\\"selected\\\": \\\"true\\\"  \\r\\n}\\r\\n]\\r\\n\\r\\n\"\n          }\n        ],\n        \"style\": \"pills\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n      },\n      \"name\": \"parameters - 1\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Overview - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0\\t|Initial Version|\\r\\n|V1.1.0\\t|Split up the data sets, Overview, Application Rule Logs, Network Rule Logs, DNS Proxy Logs. Added in Investigation visibility with Azure Firewall + Azure Graph. Added in visibility to multiple workspaces and filtering to Firewall resources. |\\r\\n|V1.2.0 | Added new filteres, \\\"Show Help\\\", \\\"Show Resources\\\", \\\"GeoLocationCSV\\\", Updated query parsing to the Overview queries. Improved overall performance in large data scale performance with new parsing requirements.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFOverview\"\n              }\n            ],\n            \"name\": \"text - 40\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - App Rules - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added Web Category.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFAppRule\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 63\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - Network Rule - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added in GeoLocation queries, updated main query to use GeoLocation data.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFNetRule\"\n              }\n            ],\n            \"name\": \"text - 64\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - DNSProxy - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.1.0 | Initial Version\\r\\n|V1.2.0 | No modifications were made\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFDNSProxy\"\n              }\n            ],\n            \"name\": \"text - 65\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.2.0 | Initial Version\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFIDSIPS\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 66\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added IDPS Logs to the investgation experience, Added in GeoLocation infromation. Updated the KQL logic to be faster for large data volume.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFInvestigate\"\n              }\n            ],\n            \"name\": \"text - 67\"\n          }\n        ]\n      },\n      \"name\": \"ChangeLogGroup\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Overview page has the following features.\\r\\n\\r\\n- All Firewall Data Log Analytics Volume (Total)\\r\\n- All Firewall Data Log Analytics Volume (Per Firewall)\\r\\n- All Firewall Event Categories\\r\\n- All Firewall Event Categories over time\\r\\n- Azure Firewall Metrics data\\r\\n  - Traffic\\r\\n  - SNAT Port\\r\\n  - Network Rule Count\\r\\n  - Application Rule Count\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nStart by looking at the workbook filters, examples would be TimeRange, Workspace, Azure Firewall. Note these are filtered based on your azure portal settings of \\\"Default subscription filter\\\". Selecting more resources or more workspaces has an impact on speed of results depending on the data volume of your workspaces. Why TimeRange is a large factor when looking at looking at extremely large data sets of volume(example over 1 Billion logs) so multiple filters have been offered to finetune the results without having to build your own queries.\\r\\n\\r\\nIf this is your first time looking at this workbook, my suggestion is to use 14 days(this is the fastest cached data in Log Analytics), a single workspace, a single firewall, if you're wanting to see the results of one firewall. Best to know where your firewall is sending it's logs too to confirm you didn't select a workspace that doesn't have that firewalls data. How to check, go to the Azure Firewall, click Diagnostic settings, see what Log Analytics workspace is currently configured.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, and sending to workspace your azure ad user had RBAC permissions to. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\\r\\n- Azure Metrics requires resource permissions of the Firewall you're wanting data on. \"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFOverview\"\n            },\n            \"name\": \"text - 59\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Application rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Unique Source IP Address*\\r\\n- Application Rule Usage\\r\\n- Denied/Allowed FQDN over time\\r\\n- Denied/Allowed FQDN count\\r\\n- Denied/Allowed Web Categories over time\\r\\n- Denied/Allowed Web Categories count\\r\\n- Pre-parsed Azure Firewall Application Rule Logs with a search feature.\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the unique source of IP addresses based on the global filters you have in place, this is showing only the top 10 IPAddresses, you can modify the KQL query to show more if needed if you click the \\\"Edit\\\" button. We added in the logic to show the volume over time, under the IP address/count information. If you click on the highest count (my example is 415,786 count, 10.0.24.4 ipaddress) it'll filter everything on the Application rule log statistic page to this IP address specifically. (Only Exception is the Rule Usage). Note this could cause other data sets to become blank as a result, sometimes you only have Approved or Denied access based on the configuration of the firewall.\\r\\n\\r\\nIf you're wanting to search for something a little more specific other than IPAddress filter, you can use the \\\"Search\\\" bar under the \\\"All IP Address events\\\" query to create a custom filter to the parsed logs. Example could be an FQDN \\\"wdcp.microsoft.com\\\" to pull up those logs specifically with that name in it.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Application Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFAppRule\"\n            },\n            \"name\": \"text - 1\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Network rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Rule Actions*\\r\\n\\r\\n- Target Ports*\\r\\n\\r\\n- DNAT Actions*\\r\\n\\r\\n- GeoLocation\\r\\n\\r\\n- Actions over time(Time scrub enabled)\\r\\n\\r\\n- Pre-parsed Network Rule data with GeoLocation added\\r\\n\\r\\n  *Note: GeoLocation is using an public file, you have to modify your GeoLocation Global Filter tab to add your own data.*\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll get see pie charts on the screen, each of these can be clicked on to filter the data below. You'll have to click on the color of the wheel in order to use the filter feature. Downfall of this, if it's an extremely small data set, its hard to click on that color due to the challenge of even seeing it. These filters are a top down approach, meaning what clicked on top, filters below. If you'd like, feel free to test this out now. Under \\\"Target Ports, filterable by Target Port\\\" find port 53 ( pretty common port). Click on the wheel with the color that's associated to port 53. You'll see everything change below only showing data that has port 53 associated to it. If you'd like to remove this filter you have a few options. \\r\\n\\r\\n1. Click the \\\"Go back\\\" at the top right of the wheel\\r\\n2. Refresh the whole workbook\\r\\n3. Refresh the whole browser window\\r\\n\\r\\n*A note about the new feature added \\\"GeoLocation\\\", this is public data shared through the Log Analytics developer team to show the feature to associate IP addresses with a GeoLocation file. This had been added to the workbook to show you what's possible, it's encouraged for you to use your own data which could be further enriched. If you had Lat/Long data, you could even add in a map feature into this workbook to show you where the traffic is mostly.*\\r\\n\\r\\nMid-way down the page you'll see the \\\"Actions, by time\\\", if we saw a large spike and wanted to lower the window of traffic, select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th. When i was looking over 14 days of time. This will filter the \\\"All IP Addresses events\\\" down to this new time window.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Network Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFNetRule\"\n            },\n            \"name\": \"text - 2\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - DNS Proxy page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- DNS Traffic by count (Time scrub enabled)\\r\\n- DNS Proxy by Request Name, by Count*\\r\\n- DNS Proxy Request by ClientIP, by Count*\\r\\n- Count over time of Proxy Requests by ClientIP\\r\\n- Pre-parsed DNS Proxy data\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the DNS Proxy traffic count, this is a great way to start to narrow down the proxy traffic over a period of time. Example we're looking at the 14 day window, but there was an odd spike or dip in proxy traffic, why? use the time scrub feature to select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th.\\r\\n\\r\\nAfter adding our second time filter to the page, move forward to looking at the DNS requests. You might see a large spike in a specific DNS request, could be something you're not even familiar with. Using an example, i see a DNS request for \\\"md-fpp31tsvhx4s.blob.core.windows.net\\\" for 300K times in my current filters. By selecting this Request Name, it'll filter on the right showing me which clients are requesting this DNS traffic. Which after clicking on my request, i see 2 different IP addresses now. Oddly though, one is much smaller than the other. Lets select that Ip address to add an additional filter to the logs. Now we can see the logs related to that machine client ip, specifically around that DNS request name. This might help you narrow down if there are any actions that need to be taken on your firewall.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires DNS Proxy Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFDNSProxy\"\n            },\n            \"name\": \"text - 3\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall Premium- IDPS page has the following features.\\r\\n\\r\\n*As noted on the title, these logs are only created on the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IDPS Actions Count*\\r\\n- IDPS Protocol Count*\\r\\n- IDPS SignatureID Count*\\r\\n- IDPS SourceIP Count*\\r\\n- Azure Firewall IDPS count over time (Time Scrub Enabled)\\r\\n- Azure Firewall IDPS logs with GeoLocation\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see Pie Charts offering multiple filtering options to your IDPS logs, showing Alerts, Protocols, SignatureIDs and Sources of the logs. Lets start by selecting an ClientIP address(SourceIP) under the \\\"IDPS SourceIP Count, filterable by SourceIP\\\". I clicked on the largest one, you might of noticed most of the traffic under the IDPS logs are alerts, Mostly TCP to this ClientIP address and there could be some specific SignatureID's are being triggered. Looking further into the logs, you should expand the Source IP to see the different IP Addresses this client has talked to within the past 14 days(current global filter). The majority of the traffic is going to XX.XX.XX.XX, which is something to remember.\\r\\n\\r\\nGoing further down, you might noticed a spike in traffic, lets use the time scrub feature to narrow down the time window to that spike. Start by selecting on the left side(where you're wanting to start time to be, before the event occurred) drag, and move it over to the right(the end time). Example March 24th - March 27th.\\r\\n\\r\\n*Note; The GeoLocation + Data can take a long time to refresh.*\\r\\n\\r\\nYou should now be able to see data we filtered down to, with it based on  GeoLocation/Signature ID's\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Premium Diagnostic settings enabled, specifically requires IDPS Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFIDSIPS\"\n            },\n            \"name\": \"text - 4\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Investigation page has the following features.\\r\\n\\r\\n*Note, this is a combination of all the logs within the Azure Firewall workbook. Some logs are from the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IFQDN Traffic by Count*\\r\\n- SourceIP Address*\\r\\n- SourceIPAddress Resource Lookup (Azure Resource Graph)\\r\\n- FQDN Lookup logs\\r\\n- Azure Firewall Threat Intel\\r\\n- Azure Firewall Premium with GeoLocation- IDPS\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nThis is the page where we narrow down everything, You should considering adding your own twist based on your own investigations to this page. Leverage this as a template of where to start and how to move forward.\\r\\n\\r\\nStarting out we see FQDN and IP Address are the page's first filters offered.\\r\\n\\r\\nLooking at source count, you might see something that has a large count. Like the following example \\\"watson.telemetry.microsoft.com\\\".  Click on the \\\"Deny\\\"/'Count' line to use the filter feature for the whole page.\\r\\n\\r\\nThis narrowed down our large list of client (SourceIP) address to a smaller list, which could be used to find out which client is being the loudest or maybe something that sneaked in that wasn't suppose to be talking to this FQDN in the first place. Click on an IPAddress(SourceIP). \\r\\n\\r\\nAzure Resource Graph is then used to find which machine this is, which Azure Resource NIC, Public IP address, Subnet, etc.\\r\\n\\r\\nUse the other data sets to help see the logs you've filtered based on the FQDN + IPAddress above. \\r\\n\\r\\n*Note, FQDN isn't required for the Azure Resource Graph lookup.*\\r\\n\\r\\nSome log sources might be blank, that's perfectly acceptable in this scenario as we're filtering down to alerts and events.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- All Azure Firewall Diagnostic Logs\\r\\n- RBAC Permissions for Azure Resource Graph lookup.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFInvestigate\"\n            },\n            \"name\": \"text - 5\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"Help\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"name\": \"Get-Help\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - overview\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"Main title\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| extend Tier = trim(' ', tostring(properties.sku.tier))\\r\\n| extend Status = trim(' ', tostring(iif(isempty(properties.ipConfigurations.[0].properties.provisioningState),properties.provisioningState,properties.ipConfigurations.[0].properties.provisioningState)))\\r\\n| extend Premium = iff(Tier == \\\"Premium\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend Standard = iff(Tier == \\\"Standard\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend ProvisionedState = iff(Status == \\\"Succeeded\\\", \\\"Running\\\", \\\"Not Running\\\")\\r\\n| extend Policy = trim(' ', tostring(properties.firewallPolicy.id))\\r\\n| extend ApplicationRule1 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule2 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule3 = iff(ApplicationRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend ApplicationRule4 = iff(ApplicationRule2 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend ApplicationRuleClassic = strcat(ApplicationRule3, ApplicationRule4)\\r\\n| extend NetworkRule1 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule2 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule3 = iff(NetworkRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend NetworkRule4 = iff(NetworkRule1 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend NetworkRuleClassic = strcat(NetworkRule3, NetworkRule4)\\r\\n| project Firewall=id, Premium, Standard, ProvisionedState,FirewallPolicy= Policy, ApplicationRuleClassic, NetworkRuleClassic, location, resourceGroup, subscriptionId, tenantId\",\n        \"size\": 1,\n        \"title\": \"Azure Firewall Resource List\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Premium\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"Standard\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ProvisionedState\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Running\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Not Running\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ApplicationRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"NetworkRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"FirewallResources\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 60\",\n      \"styleSettings\": {\n        \"margin\": \"0\"\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics \\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 16\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by Resource, bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by firewall over time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportParameterName\": \"TopEvent\",\n        \"exportDefaultValue\": \"{\\\"Resource\\\":\\\"*\\\",\\\"ResourceGroup\\\":\\\"*\\\"}\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Resource\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          },\n          \"showBorder\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Firewall per Resource Group\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events, by category: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"Category\",\n        \"exportParameterName\": \"SelectedCategory\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"Category\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events by category\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category, bin(TimeGenerated, {TimeRange:grain})\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events categories, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events categories by time\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"### Firewall Metrics\\r\\nThe data below dosen't read from the Log Analytics workpsace, it's reading directly from the resources which requires resource visibility. \\r\\nClick [here for more information on Azure Metrics](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/data-platform-metrics)\\r\\n\",\n        \"style\": \"info\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"text - 39\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--Throughput\",\n            \"aggregation\": 4,\n            \"splitBy\": null,\n            \"columnName\": \"All Firewall Throughput Average\"\n          }\n        ],\n        \"title\": \"Average Throughput of Firewall Traffic\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--SNATPortUtilization\",\n            \"aggregation\": 4,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"SNAT Port Utilization\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--NetworkRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Network Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--ApplicationRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Application Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Application rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Amount=count() by SourceIP\\r\\n| join kind = inner\\r\\n( union (\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n    | make-series Trend = count() default = 0 on bin(TimeGenerated, 1d) from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SourceIP) on SourceIP\\r\\n    | project-away SourceIP1, TimeGenerated\\r\\n    | top 10 by Amount\\r\\n    | sort by Amount\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Unique Source IP addresses, filterable by SelectedSourceIP: Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"SourceIP\",\n        \"exportParameterName\": \"SelectedSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"tiles\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"subtitleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"secondaryContent\": {\n            \"columnMatch\": \"Trend\",\n            \"formatter\": 9,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 4\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where RuleCollection matches regex \\\".*\\\" \\r\\n| summarize Count = count(), last_log = datetime_diff(\\\"second\\\", now(), max(TimeGenerated)) by RuleCollection, Rule, WebCategory\",\n        \"size\": 1,\n        \"title\": \"Application Rule Usage : Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"last_log\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"greenRed\"\n              },\n              \"numberFormat\": {\n                \"unit\": 24,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_last_log_4\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_last_log_4\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 36\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Denied FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"tileSettings\": {\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 3\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_count__1\",\n              \"sortOrder\": 2\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_count__1\",\n            \"sortOrder\": 2\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ) \\r\\n| where Action == \\\"Allow\\\"\\r\\n| summarize count() by FQDN, bin(TimeGenerated, 6h)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"   \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Allowed FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n    (\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" URL \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s !has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    )\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '*' == SourceIP or '*' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated, 6hrs)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\" . Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Denied Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied Web Catgories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"query - 9\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Network rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by Action\",\n        \"size\": 3,\n        \"title\": \"Rule actions, filterable by RuleAction\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"RuleAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Count=count() by DestinationPort\",\n        \"size\": 3,\n        \"title\": \"Target ports, filterable by TargetPort\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"DestinationPort\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 10\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| summarize Amount=count() by NatDestination\\r\\n\",\n        \"size\": 3,\n        \"title\": \"DNAT actions, filterable by NatDestination\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"NatDestination\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 12\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| project DestinationIP\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize count() by continent_name\\r\\n\",\n        \"size\": 2,\n        \"title\": \"GeoLocation\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showRefreshButton\": true,\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"netcontinent\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 61\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize amount = count() by Action , SourceIP\\r\\n| sort by amount desc\",\n        \"size\": 0,\n        \"title\": \"Rule actions, by IP addresses\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Action\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"amount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"eventCount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"min\": 0,\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Action\"\n            ],\n            \"expandTopLevel\": false,\n            \"finalBy\": \"Action\"\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 8\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"   \\r\\n| summarize AMOUNT=count() by DestinationPort, SourceIP\\r\\n| sort by AMOUNT desc\",\n        \"size\": 0,\n        \"title\": \"Target ports, by Source IP: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"DestinationPort\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"AMOUNT\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"DestinationPort\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 11\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize Amount=count() by NatDestination, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNAT'ed over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| project DestinationIP, TimeGenerated\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize Amount=count() by continent_name, bin(TimeGenerated, {TimeRange:grain})\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"GeoLocation over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize count() by Action, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Actions, by time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"ActionsByTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 15\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated,Protocol, ICMPType, Action,SourceIP, SourcePort, DestinationIP , DestinationPort , NatDestination, ResourceId , ResourceGroup , SubscriptionId\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"ActionsByTimeBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 22\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall -DNS Proxy\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"text - 41\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project Resource, TimeGenerated\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Traffic by count per Firewall: Query Time({$queryTime}) \",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| summarize count() by Request_Name\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy count by Request Name, filterable by Request_Name\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"Request_Name\",\n        \"exportParameterName\": \"DNSRequestName\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Request count by ClientIP, filterable by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"ClientIP\",\n        \"exportParameterName\": \"DNSClientIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNS Proxy Request over time by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, ResourceId, ClientIP, ClientPort, QueryID, Request_Type, Request_Class, Request_Name, Request_Protocol, Request_Size, EDNSO_DO, EDNS0_Buffersize, Responce_Code, Responce_Flags, Responce_Size, Response_Duration, SubscriptionId\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"DNS Proxy Information: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall Premium - IDPS\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"text - 42\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| summarize count() by Action\",\n        \"size\": 2,\n        \"title\": \"IDPS Actions Count, filterable by Action\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 2,\n        \"title\": \"IDPS Protocol Count, filterable by Protocol\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSProtocol\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\\r\\n\",\n        \"size\": 2,\n        \"title\": \"IDPS SignatureID Count, filterable by SignatureID\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSignatureID\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, DestIP\\r\\n| sort by count_ desc\",\n        \"size\": 2,\n        \"title\": \"IDPS SourceIP Count, filterable by SourceIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Action\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Actions by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Protocols by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS SignatureIDs by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize Volume=count() by DestIP, SourceIP\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Filtered SourceIP, filterable by DestIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"DestIP\",\n        \"exportParameterName\": \"IDSIPSDestIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Volume\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        },\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        },\n        \"graphSettings\": {\n          \"type\": 0,\n          \"topContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"centerContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 1,\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall IDPS count over time\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Azure Firewall IDPS logs with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"AFIDSIPSBrush\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - Investigation\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"text - 43\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by FQDN, Action\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"FQDN Traffic by Count, filterable by FQDN: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"FQDN\",\n        \"exportParameterName\": \"FullName\",\n        \"exportDefaultValue\": \"*\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"FQDN\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"minimumIntegerDigits\": 1,\n                  \"maximumFractionDigits\": 1,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"FQDN\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"35\",\n      \"name\": \"query - 29 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP \u003c\u003e \\\"\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, SubscriptionId\\r\\n| sort by count_\",\n        \"size\": 0,\n        \"title\": \"SourceIP Address, filterable: Query Time({$queryTime})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportedParameters\": [\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIP\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"privateIPAddress\"\n          },\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIPWC\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"*\"\n          },\n          {\n            \"fieldName\": \"SubscriptionId\",\n            \"parameterName\": \"SelectedSubscriptionId\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"-\"\n          }\n        ],\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SubscriptionId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"15\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Resources\\r\\n| where type =~ 'microsoft.network/networkinterfaces'\\r\\n| where properties contains \\\"{InvestigateIP}\\\"\\r\\n| extend NSG = properties['networkSecurityGroup']['id']\\r\\n| parse NSG with \\\"/subscriptions/\\\" NetworkSecurityGroup_Sub \\\"/resourceGroups/\\\" NetworkSecurityGroup_rg \\\"/providers/Microsoft.Network/networkSecurityGroups/\\\" NetworkSecurityGroup_Name\\r\\n| project id, PrivateIPAddress = tostring(properties['ipConfigurations'][0]['properties']['privateIPAddress']),  PublicIPAddress = tostring(properties['ipConfigurations'][0]['properties']['publicIPAddress']['id']), VirtualMachine = tostring(properties['virtualMachine']['id']), subnet = tostring(properties['ipConfigurations'][0]['properties']['subnet']['id']), NetworkSecurityGroup = NetworkSecurityGroup_Name, properties, subscriptionId, tenantId\",\n        \"size\": 0,\n        \"title\": \"SourceIPAddress Resource Lookup: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"exportFieldName\": \"id\",\n        \"exportParameterName\": \"Testid\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"properties\",\n              \"formatter\": 5\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 33 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s !has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP == \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"FQDN Lookup logs: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where msg_s \u003c\u003e \\\" request from  to . Action: . ThreatIntel: \\\"\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n)\\r\\n| summarize by TimeGenerated, Protocol, SourceIP, SourcePort, FQDN, DestinationPort, Url, Action, ThreatIntelMsg\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Threat Intel: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There is no Azure Firewall Threat Intel for your filtered results\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"TimeGenerated\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"TimeGenerated\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 29\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| summarize by TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Premium with GeoLocation- IDPS: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"Message\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"country_name\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 58\"\n    }\n  ],\n  \"fallbackResourceIds\": [\n    \"Azure Monitor\"\n  ],\n  \"fromTemplateId\": \"sentinel-UserWorkbook\",\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/Azure/Azure-Network-Security/master/Azure%20Firewall/Workbook%20-%20Azure%20Firewall%20Monitor%20Workbook/Azure%20Firewall_Gallery.json",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "{\n  \"version\": \"Notebook/1.0\",\n  \"items\": [\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"## Azure Firewall Workbook\\r\\n---\\r\\n\"\n      },\n      \"name\": \"text - 23\"\n    },\n    {\n      \"type\": 11,\n      \"content\": {\n        \"version\": \"LinkItem/1.0\",\n        \"style\": \"tabs\",\n        \"links\": [\n          {\n            \"id\": \"20847ce8-91bc-4d8b-b878-a5a41c95c31c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Overview\",\n            \"subTarget\": \"AFOverview\",\n            \"preText\": \"Azure Firewall Overview\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"f564709d-1658-46a1-8b44-892210e13017\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Application rule log statistics\",\n            \"subTarget\": \"AFAppRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"1f6661e2-f873-4d56-879d-4d085d8cf1d4\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Network rule log statistics\",\n            \"subTarget\": \"AFNetRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"ef1548c5-ef55-4eaa-8a81-b049cb93b56c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - DNS Proxy\",\n            \"subTarget\": \"AFDNSProxy\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"18a4a585-2176-4d9f-907c-8e8d5f984efa\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Premium - IDPS\",\n            \"subTarget\": \"AFIDSIPS\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"97dc7364-961d-4c19-a730-7b9024f46b91\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Investigation\",\n            \"subTarget\": \"AFInvestigate\",\n            \"style\": \"link\"\n          }\n        ]\n      },\n      \"name\": \"links - 24\"\n    },\n    {\n      \"type\": 9,\n      \"content\": {\n        \"version\": \"KqlParameterItem/1.0\",\n        \"parameters\": [\n          {\n            \"id\": \"ab7d6c51-d7df-436c-96a2-429163aa50ec\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"TimeRange\",\n            \"type\": 4,\n            \"isRequired\": true,\n            \"isGlobal\": true,\n            \"value\": {\n              \"durationMs\": 7776000000\n            },\n            \"typeSettings\": {\n              \"selectableValues\": [\n                {\n                  \"durationMs\": 300000\n                },\n                {\n                  \"durationMs\": 900000\n                },\n                {\n                  \"durationMs\": 1800000\n                },\n                {\n                  \"durationMs\": 3600000\n                },\n                {\n                  \"durationMs\": 14400000\n                },\n                {\n                  \"durationMs\": 43200000\n                },\n                {\n                  \"durationMs\": 86400000\n                },\n                {\n                  \"durationMs\": 172800000\n                },\n                {\n                  \"durationMs\": 259200000\n                },\n                {\n                  \"durationMs\": 604800000\n                },\n                {\n                  \"durationMs\": 1209600000\n                },\n                {\n                  \"durationMs\": 2419200000\n                },\n                {\n                  \"durationMs\": 2592000000\n                },\n                {\n                  \"durationMs\": 5184000000\n                },\n                {\n                  \"durationMs\": 7776000000\n                }\n              ],\n              \"allowCustom\": false\n            }\n          },\n          {\n            \"id\": \"add90eb3-ff5f-4b19-9658-ff15c8043af5\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Workspaces\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project id, name\\r\\n| order by name desc\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::100\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::100\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"5084e141-6c56-4d7f-bd8a-09f7ef9af1bc\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Resource\",\n            \"label\": \"Azure Firewalls\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| project id, name\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::all\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::all\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"13d9f6e9-9290-4b1e-b0d0-a7c0ebdc1aed\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Help\",\n            \"label\": \"Show Help\",\n            \"type\": 10,\n            \"description\": \"This will show some help information to help you understand the page you are on\",\n            \"isRequired\": true,\n            \"typeSettings\": {\n              \"additionalResourceOptions\": []\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true },\\r\\n { \\\"value\\\": \\\"Change Log\\\", \\\"label\\\": \\\"Change Log\\\"}\\r\\n]\"\n          },\n          {\n            \"id\": \"68f2cb32-03d4-4307-8eb5-1f66dfc09a85\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"FirewallResources\",\n            \"label\": \"Show Resources\",\n            \"type\": 2,\n            \"description\": \"The is only used on the Overview page.\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\", \\\"selected\\\":true},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\" }\\r\\n]\",\n            \"value\": \"No\"\n          },\n          {\n            \"id\": \"53aa8daf-29de-40a1-9147-c0970e32fac4\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"GeoLocation\",\n            \"label\": \"GeoLocationCSV\",\n            \"type\": 2,\n            \"description\": \"Supplied as a value for GeoLocation lookup on queries: Read more here - https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin#ipv4-lookup---matching-rows-only\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"\\r\\n[\\r\\n{\\r\\n\\\"value\\\": \\\"https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv\\\", \\\"label\\\": \\\"GeoLocationDefault\\\", \\\"selected\\\": \\\"true\\\"  \\r\\n}\\r\\n]\\r\\n\\r\\n\"\n          }\n        ],\n        \"style\": \"pills\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n      },\n      \"name\": \"parameters - 1\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Overview - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0\\t|Initial Version|\\r\\n|V1.1.0\\t|Split up the data sets, Overview, Application Rule Logs, Network Rule Logs, DNS Proxy Logs. Added in Investigation visibility with Azure Firewall + Azure Graph. Added in visibility to multiple workspaces and filtering to Firewall resources. |\\r\\n|V1.2.0 | Added new filteres, \\\"Show Help\\\", \\\"Show Resources\\\", \\\"GeoLocationCSV\\\", Updated query parsing to the Overview queries. Improved overall performance in large data scale performance with new parsing requirements.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFOverview\"\n              }\n            ],\n            \"name\": \"text - 40\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - App Rules - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added Web Category.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFAppRule\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 63\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - Network Rule - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added in GeoLocation queries, updated main query to use GeoLocation data.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFNetRule\"\n              }\n            ],\n            \"name\": \"text - 64\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - DNSProxy - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.1.0 | Initial Version\\r\\n|V1.2.0 | No modifications were made\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFDNSProxy\"\n              }\n            ],\n            \"name\": \"text - 65\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.2.0 | Initial Version\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFIDSIPS\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 66\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added IDPS Logs to the investgation experience, Added in GeoLocation infromation. Updated the KQL logic to be faster for large data volume.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFInvestigate\"\n              }\n            ],\n            \"name\": \"text - 67\"\n          }\n        ]\n      },\n      \"name\": \"ChangeLogGroup\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Overview page has the following features.\\r\\n\\r\\n- All Firewall Data Log Analytics Volume (Total)\\r\\n- All Firewall Data Log Analytics Volume (Per Firewall)\\r\\n- All Firewall Event Categories\\r\\n- All Firewall Event Categories over time\\r\\n- Azure Firewall Metrics data\\r\\n  - Traffic\\r\\n  - SNAT Port\\r\\n  - Network Rule Count\\r\\n  - Application Rule Count\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nStart by looking at the workbook filters, examples would be TimeRange, Workspace, Azure Firewall. Note these are filtered based on your azure portal settings of \\\"Default subscription filter\\\". Selecting more resources or more workspaces has an impact on speed of results depending on the data volume of your workspaces. Why TimeRange is a large factor when looking at looking at extremely large data sets of volume(example over 1 Billion logs) so multiple filters have been offered to finetune the results without having to build your own queries.\\r\\n\\r\\nIf this is your first time looking at this workbook, my suggestion is to use 14 days(this is the fastest cached data in Log Analytics), a single workspace, a single firewall, if you're wanting to see the results of one firewall. Best to know where your firewall is sending it's logs too to confirm you didn't select a workspace that doesn't have that firewalls data. How to check, go to the Azure Firewall, click Diagnostic settings, see what Log Analytics workspace is currently configured.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, and sending to workspace your azure ad user had RBAC permissions to. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\\r\\n- Azure Metrics requires resource permissions of the Firewall you're wanting data on. \"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFOverview\"\n            },\n            \"name\": \"text - 59\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Application rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Unique Source IP Address*\\r\\n- Application Rule Usage\\r\\n- Denied/Allowed FQDN over time\\r\\n- Denied/Allowed FQDN count\\r\\n- Denied/Allowed Web Categories over time\\r\\n- Denied/Allowed Web Categories count\\r\\n- Pre-parsed Azure Firewall Application Rule Logs with a search feature.\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the unique source of IP addresses based on the global filters you have in place, this is showing only the top 10 IPAddresses, you can modify the KQL query to show more if needed if you click the \\\"Edit\\\" button. We added in the logic to show the volume over time, under the IP address/count information. If you click on the highest count (my example is 415,786 count, 10.0.24.4 ipaddress) it'll filter everything on the Application rule log statistic page to this IP address specifically. (Only Exception is the Rule Usage). Note this could cause other data sets to become blank as a result, sometimes you only have Approved or Denied access based on the configuration of the firewall.\\r\\n\\r\\nIf you're wanting to search for something a little more specific other than IPAddress filter, you can use the \\\"Search\\\" bar under the \\\"All IP Address events\\\" query to create a custom filter to the parsed logs. Example could be an FQDN \\\"wdcp.microsoft.com\\\" to pull up those logs specifically with that name in it.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Application Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFAppRule\"\n            },\n            \"name\": \"text - 1\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Network rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Rule Actions*\\r\\n\\r\\n- Target Ports*\\r\\n\\r\\n- DNAT Actions*\\r\\n\\r\\n- GeoLocation\\r\\n\\r\\n- Actions over time(Time scrub enabled)\\r\\n\\r\\n- Pre-parsed Network Rule data with GeoLocation added\\r\\n\\r\\n  *Note: GeoLocation is using an public file, you have to modify your GeoLocation Global Filter tab to add your own data.*\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll get see pie charts on the screen, each of these can be clicked on to filter the data below. You'll have to click on the color of the wheel in order to use the filter feature. Downfall of this, if it's an extremely small data set, its hard to click on that color due to the challenge of even seeing it. These filters are a top down approach, meaning what clicked on top, filters below. If you'd like, feel free to test this out now. Under \\\"Target Ports, filterable by Target Port\\\" find port 53 ( pretty common port). Click on the wheel with the color that's associated to port 53. You'll see everything change below only showing data that has port 53 associated to it. If you'd like to remove this filter you have a few options. \\r\\n\\r\\n1. Click the \\\"Go back\\\" at the top right of the wheel\\r\\n2. Refresh the whole workbook\\r\\n3. Refresh the whole browser window\\r\\n\\r\\n*A note about the new feature added \\\"GeoLocation\\\", this is public data shared through the Log Analytics developer team to show the feature to associate IP addresses with a GeoLocation file. This had been added to the workbook to show you what's possible, it's encouraged for you to use your own data which could be further enriched. If you had Lat/Long data, you could even add in a map feature into this workbook to show you where the traffic is mostly.*\\r\\n\\r\\nMid-way down the page you'll see the \\\"Actions, by time\\\", if we saw a large spike and wanted to lower the window of traffic, select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th. When i was looking over 14 days of time. This will filter the \\\"All IP Addresses events\\\" down to this new time window.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Network Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFNetRule\"\n            },\n            \"name\": \"text - 2\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - DNS Proxy page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- DNS Traffic by count (Time scrub enabled)\\r\\n- DNS Proxy by Request Name, by Count*\\r\\n- DNS Proxy Request by ClientIP, by Count*\\r\\n- Count over time of Proxy Requests by ClientIP\\r\\n- Pre-parsed DNS Proxy data\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the DNS Proxy traffic count, this is a great way to start to narrow down the proxy traffic over a period of time. Example we're looking at the 14 day window, but there was an odd spike or dip in proxy traffic, why? use the time scrub feature to select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th.\\r\\n\\r\\nAfter adding our second time filter to the page, move forward to looking at the DNS requests. You might see a large spike in a specific DNS request, could be something you're not even familiar with. Using an example, i see a DNS request for \\\"md-fpp31tsvhx4s.blob.core.windows.net\\\" for 300K times in my current filters. By selecting this Request Name, it'll filter on the right showing me which clients are requesting this DNS traffic. Which after clicking on my request, i see 2 different IP addresses now. Oddly though, one is much smaller than the other. Lets select that Ip address to add an additional filter to the logs. Now we can see the logs related to that machine client ip, specifically around that DNS request name. This might help you narrow down if there are any actions that need to be taken on your firewall.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires DNS Proxy Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFDNSProxy\"\n            },\n            \"name\": \"text - 3\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall Premium- IDPS page has the following features.\\r\\n\\r\\n*As noted on the title, these logs are only created on the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IDPS Actions Count*\\r\\n- IDPS Protocol Count*\\r\\n- IDPS SignatureID Count*\\r\\n- IDPS SourceIP Count*\\r\\n- Azure Firewall IDPS count over time (Time Scrub Enabled)\\r\\n- Azure Firewall IDPS logs with GeoLocation\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see Pie Charts offering multiple filtering options to your IDPS logs, showing Alerts, Protocols, SignatureIDs and Sources of the logs. Lets start by selecting an ClientIP address(SourceIP) under the \\\"IDPS SourceIP Count, filterable by SourceIP\\\". I clicked on the largest one, you might of noticed most of the traffic under the IDPS logs are alerts, Mostly TCP to this ClientIP address and there could be some specific SignatureID's are being triggered. Looking further into the logs, you should expand the Source IP to see the different IP Addresses this client has talked to within the past 14 days(current global filter). The majority of the traffic is going to XX.XX.XX.XX, which is something to remember.\\r\\n\\r\\nGoing further down, you might noticed a spike in traffic, lets use the time scrub feature to narrow down the time window to that spike. Start by selecting on the left side(where you're wanting to start time to be, before the event occurred) drag, and move it over to the right(the end time). Example March 24th - March 27th.\\r\\n\\r\\n*Note; The GeoLocation + Data can take a long time to refresh.*\\r\\n\\r\\nYou should now be able to see data we filtered down to, with it based on  GeoLocation/Signature ID's\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Premium Diagnostic settings enabled, specifically requires IDPS Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFIDSIPS\"\n            },\n            \"name\": \"text - 4\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Investigation page has the following features.\\r\\n\\r\\n*Note, this is a combination of all the logs within the Azure Firewall workbook. Some logs are from the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IFQDN Traffic by Count*\\r\\n- SourceIP Address*\\r\\n- SourceIPAddress Resource Lookup (Azure Resource Graph)\\r\\n- FQDN Lookup logs\\r\\n- Azure Firewall Threat Intel\\r\\n- Azure Firewall Premium with GeoLocation- IDPS\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nThis is the page where we narrow down everything, You should considering adding your own twist based on your own investigations to this page. Leverage this as a template of where to start and how to move forward.\\r\\n\\r\\nStarting out we see FQDN and IP Address are the page's first filters offered.\\r\\n\\r\\nLooking at source count, you might see something that has a large count. Like the following example \\\"watson.telemetry.microsoft.com\\\".  Click on the \\\"Deny\\\"/'Count' line to use the filter feature for the whole page.\\r\\n\\r\\nThis narrowed down our large list of client (SourceIP) address to a smaller list, which could be used to find out which client is being the loudest or maybe something that sneaked in that wasn't suppose to be talking to this FQDN in the first place. Click on an IPAddress(SourceIP). \\r\\n\\r\\nAzure Resource Graph is then used to find which machine this is, which Azure Resource NIC, Public IP address, Subnet, etc.\\r\\n\\r\\nUse the other data sets to help see the logs you've filtered based on the FQDN + IPAddress above. \\r\\n\\r\\n*Note, FQDN isn't required for the Azure Resource Graph lookup.*\\r\\n\\r\\nSome log sources might be blank, that's perfectly acceptable in this scenario as we're filtering down to alerts and events.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- All Azure Firewall Diagnostic Logs\\r\\n- RBAC Permissions for Azure Resource Graph lookup.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFInvestigate\"\n            },\n            \"name\": \"text - 5\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"Help\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"name\": \"Get-Help\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - overview\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"Main title\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| extend Tier = trim(' ', tostring(properties.sku.tier))\\r\\n| extend Status = trim(' ', tostring(iif(isempty(properties.ipConfigurations.[0].properties.provisioningState),properties.provisioningState,properties.ipConfigurations.[0].properties.provisioningState)))\\r\\n| extend Premium = iff(Tier == \\\"Premium\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend Standard = iff(Tier == \\\"Standard\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend ProvisionedState = iff(Status == \\\"Succeeded\\\", \\\"Running\\\", \\\"Not Running\\\")\\r\\n| extend Policy = trim(' ', tostring(properties.firewallPolicy.id))\\r\\n| extend ApplicationRule1 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule2 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule3 = iff(ApplicationRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend ApplicationRule4 = iff(ApplicationRule2 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend ApplicationRuleClassic = strcat(ApplicationRule3, ApplicationRule4)\\r\\n| extend NetworkRule1 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule2 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule3 = iff(NetworkRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend NetworkRule4 = iff(NetworkRule1 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend NetworkRuleClassic = strcat(NetworkRule3, NetworkRule4)\\r\\n| project Firewall=id, Premium, Standard, ProvisionedState,FirewallPolicy= Policy, ApplicationRuleClassic, NetworkRuleClassic, location, resourceGroup, subscriptionId, tenantId\",\n        \"size\": 1,\n        \"title\": \"Azure Firewall Resource List\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Premium\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"Standard\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ProvisionedState\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Running\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Not Running\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ApplicationRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"NetworkRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"FirewallResources\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 60\",\n      \"styleSettings\": {\n        \"margin\": \"0\"\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics \\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 16\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by Resource, bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by firewall over time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportParameterName\": \"TopEvent\",\n        \"exportDefaultValue\": \"{\\\"Resource\\\":\\\"*\\\",\\\"ResourceGroup\\\":\\\"*\\\"}\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Resource\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          },\n          \"showBorder\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Firewall per Resource Group\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events, by category: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"Category\",\n        \"exportParameterName\": \"SelectedCategory\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"Category\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events by category\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category, bin(TimeGenerated, {TimeRange:grain})\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events categories, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events categories by time\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"### Firewall Metrics\\r\\nThe data below dosen't read from the Log Analytics workpsace, it's reading directly from the resources which requires resource visibility. \\r\\nClick [here for more information on Azure Metrics](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/data-platform-metrics)\\r\\n\",\n        \"style\": \"info\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"text - 39\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--Throughput\",\n            \"aggregation\": 4,\n            \"splitBy\": null,\n            \"columnName\": \"All Firewall Throughput Average\"\n          }\n        ],\n        \"title\": \"Average Throughput of Firewall Traffic\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--SNATPortUtilization\",\n            \"aggregation\": 4,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"SNAT Port Utilization\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--NetworkRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Network Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--ApplicationRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Application Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Application rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Amount=count() by SourceIP\\r\\n| join kind = inner\\r\\n( union (\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n    | make-series Trend = count() default = 0 on bin(TimeGenerated, 1d) from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SourceIP) on SourceIP\\r\\n    | project-away SourceIP1, TimeGenerated\\r\\n    | top 10 by Amount\\r\\n    | sort by Amount\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Unique Source IP addresses, filterable by SelectedSourceIP: Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"SourceIP\",\n        \"exportParameterName\": \"SelectedSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"tiles\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"subtitleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"secondaryContent\": {\n            \"columnMatch\": \"Trend\",\n            \"formatter\": 9,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 4\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where RuleCollection matches regex \\\".*\\\" \\r\\n| summarize Count = count(), last_log = datetime_diff(\\\"second\\\", now(), max(TimeGenerated)) by RuleCollection, Rule, WebCategory\",\n        \"size\": 1,\n        \"title\": \"Application Rule Usage : Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"last_log\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"greenRed\"\n              },\n              \"numberFormat\": {\n                \"unit\": 24,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_last_log_4\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_last_log_4\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 36\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Denied FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"tileSettings\": {\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 3\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_count__1\",\n              \"sortOrder\": 2\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_count__1\",\n            \"sortOrder\": 2\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ) \\r\\n| where Action == \\\"Allow\\\"\\r\\n| summarize count() by FQDN, bin(TimeGenerated, 6h)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"   \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Allowed FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n    (\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" URL \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s !has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    )\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '*' == SourceIP or '*' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated, 6hrs)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\" . Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Denied Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied Web Catgories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"query - 9\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Network rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by Action\",\n        \"size\": 3,\n        \"title\": \"Rule actions, filterable by RuleAction\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"RuleAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Count=count() by DestinationPort\",\n        \"size\": 3,\n        \"title\": \"Target ports, filterable by TargetPort\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"DestinationPort\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 10\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| summarize Amount=count() by NatDestination\\r\\n\",\n        \"size\": 3,\n        \"title\": \"DNAT actions, filterable by NatDestination\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"NatDestination\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 12\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| project DestinationIP\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize count() by continent_name\\r\\n\",\n        \"size\": 2,\n        \"title\": \"GeoLocation\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showRefreshButton\": true,\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"netcontinent\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 61\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize amount = count() by Action , SourceIP\\r\\n| sort by amount desc\",\n        \"size\": 0,\n        \"title\": \"Rule actions, by IP addresses\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Action\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"amount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"eventCount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"min\": 0,\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Action\"\n            ],\n            \"expandTopLevel\": false,\n            \"finalBy\": \"Action\"\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 8\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"   \\r\\n| summarize AMOUNT=count() by DestinationPort, SourceIP\\r\\n| sort by AMOUNT desc\",\n        \"size\": 0,\n        \"title\": \"Target ports, by Source IP: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"DestinationPort\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"AMOUNT\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"DestinationPort\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 11\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize Amount=count() by NatDestination, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNAT'ed over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| project DestinationIP, TimeGenerated\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize Amount=count() by continent_name, bin(TimeGenerated, {TimeRange:grain})\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"GeoLocation over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize count() by Action, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Actions, by time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"ActionsByTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 15\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated,Protocol, ICMPType, Action,SourceIP, SourcePort, DestinationIP , DestinationPort , NatDestination, ResourceId , ResourceGroup , SubscriptionId\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"ActionsByTimeBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 22\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall -DNS Proxy\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"text - 41\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project Resource, TimeGenerated\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Traffic by count per Firewall: Query Time({$queryTime}) \",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| summarize count() by Request_Name\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy count by Request Name, filterable by Request_Name\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"Request_Name\",\n        \"exportParameterName\": \"DNSRequestName\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Request count by ClientIP, filterable by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"ClientIP\",\n        \"exportParameterName\": \"DNSClientIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNS Proxy Request over time by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, ResourceId, ClientIP, ClientPort, QueryID, Request_Type, Request_Class, Request_Name, Request_Protocol, Request_Size, EDNSO_DO, EDNS0_Buffersize, Responce_Code, Responce_Flags, Responce_Size, Response_Duration, SubscriptionId\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"DNS Proxy Information: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall Premium - IDPS\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"text - 42\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| summarize count() by Action\",\n        \"size\": 2,\n        \"title\": \"IDPS Actions Count, filterable by Action\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 2,\n        \"title\": \"IDPS Protocol Count, filterable by Protocol\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSProtocol\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\\r\\n\",\n        \"size\": 2,\n        \"title\": \"IDPS SignatureID Count, filterable by SignatureID\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSignatureID\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, DestIP\\r\\n| sort by count_ desc\",\n        \"size\": 2,\n        \"title\": \"IDPS SourceIP Count, filterable by SourceIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Action\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Actions by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Protocols by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS SignatureIDs by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize Volume=count() by DestIP, SourceIP\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Filtered SourceIP, filterable by DestIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"DestIP\",\n        \"exportParameterName\": \"IDSIPSDestIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Volume\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        },\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        },\n        \"graphSettings\": {\n          \"type\": 0,\n          \"topContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"centerContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 1,\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall IDPS count over time\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Azure Firewall IDPS logs with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"AFIDSIPSBrush\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - Investigation\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"text - 43\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by FQDN, Action\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"FQDN Traffic by Count, filterable by FQDN: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"FQDN\",\n        \"exportParameterName\": \"FullName\",\n        \"exportDefaultValue\": \"*\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"FQDN\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"minimumIntegerDigits\": 1,\n                  \"maximumFractionDigits\": 1,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"FQDN\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"35\",\n      \"name\": \"query - 29 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP \u003c\u003e \\\"\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, SubscriptionId\\r\\n| sort by count_\",\n        \"size\": 0,\n        \"title\": \"SourceIP Address, filterable: Query Time({$queryTime})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportedParameters\": [\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIP\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"privateIPAddress\"\n          },\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIPWC\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"*\"\n          },\n          {\n            \"fieldName\": \"SubscriptionId\",\n            \"parameterName\": \"SelectedSubscriptionId\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"-\"\n          }\n        ],\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SubscriptionId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"15\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Resources\\r\\n| where type =~ 'microsoft.network/networkinterfaces'\\r\\n| where properties contains \\\"{InvestigateIP}\\\"\\r\\n| extend NSG = properties['networkSecurityGroup']['id']\\r\\n| parse NSG with \\\"/subscriptions/\\\" NetworkSecurityGroup_Sub \\\"/resourceGroups/\\\" NetworkSecurityGroup_rg \\\"/providers/Microsoft.Network/networkSecurityGroups/\\\" NetworkSecurityGroup_Name\\r\\n| project id, PrivateIPAddress = tostring(properties['ipConfigurations'][0]['properties']['privateIPAddress']),  PublicIPAddress = tostring(properties['ipConfigurations'][0]['properties']['publicIPAddress']['id']), VirtualMachine = tostring(properties['virtualMachine']['id']), subnet = tostring(properties['ipConfigurations'][0]['properties']['subnet']['id']), NetworkSecurityGroup = NetworkSecurityGroup_Name, properties, subscriptionId, tenantId\",\n        \"size\": 0,\n        \"title\": \"SourceIPAddress Resource Lookup: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"exportFieldName\": \"id\",\n        \"exportParameterName\": \"Testid\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"properties\",\n              \"formatter\": 5\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 33 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s !has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP == \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"FQDN Lookup logs: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where msg_s \u003c\u003e \\\" request from  to . Action: . ThreatIntel: \\\"\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n)\\r\\n| summarize by TimeGenerated, Protocol, SourceIP, SourcePort, FQDN, DestinationPort, Url, Action, ThreatIntelMsg\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Threat Intel: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There is no Azure Firewall Threat Intel for your filtered results\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"TimeGenerated\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"TimeGenerated\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 29\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| summarize by TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Premium with GeoLocation- IDPS: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"Message\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"country_name\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 58\"\n    }\n  ],\n  \"fallbackResourceIds\": [\n    \"Azure Monitor\"\n  ],\n  \"fromTemplateId\": \"sentinel-UserWorkbook\",\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Mon, 26 Feb 2024 16:06:55 GMT",
              "Etag": "W/\"8845cff08f21ef3ca1960706813db5638b94d1067ebd5ced1ce3b35eb1f765df\"",
              "Expires": "Mon, 26 Feb 2024 16:11:55 GMT",
              "Source-Age": "292",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "HIT",
              "X-Cache-Hits": "1",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "c6edade474480055f622b1c9c0daa2a80e8c4996",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "BDE6:0E90:A62759:ADAE82:65DCAC56",
              "X-Served-By": "cache-par-lfpg1960085-PAR",
              "X-Timer": "S1708963615.459129,VS0,VE1",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/Azure/Azure-Network-Security/master/Azure%20Firewall/Workbook%20-%20Azure%20Firewall%20Monitor%20Workbook/Azure%20Firewall_Gallery.json"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azapi_resource",
      "name": "appservice_domain",
      "provider": "provider[\"registry.terraform.io/azure/azapi\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "{\"properties\":{\"autoRenew\":false,\"consent\":{\"agreedAt\":\"2023-08-13T15:06:59.264Z\",\"agreedBy\":\"2a04:cec0:11d9:24c8:8898:3820:8631:d83\",\"agreementKeys\":[\"DNRA\"]},\"contactAdmin\":{\"addressMailing\":{\"address1\":\"1 Microsoft Way\",\"city\":\"Redmond\",\"country\":\"US\",\"postalCode\":\"98052\",\"state\":\"WA\"},\"email\":\"houssem.dellai@live.com\",\"nameFirst\":\"azureuser\",\"nameLast\":\"Dellai\",\"phone\":\"+33.762954328\"},\"contactBilling\":{\"addressMailing\":{\"address1\":\"1 Microsoft Way\",\"city\":\"Redmond\",\"country\":\"US\",\"postalCode\":\"98052\",\"state\":\"WA\"},\"email\":\"houssem.dellai@live.com\",\"nameFirst\":\"azureuser\",\"nameLast\":\"Dellai\",\"phone\":\"+33.762954328\"},\"contactRegistrant\":{\"addressMailing\":{\"address1\":\"1 Microsoft Way\",\"city\":\"Redmond\",\"country\":\"US\",\"postalCode\":\"98052\",\"state\":\"WA\"},\"email\":\"houssem.dellai@live.com\",\"nameFirst\":\"azureuser\",\"nameLast\":\"Dellai\",\"phone\":\"+33.762954328\"},\"contactTech\":{\"addressMailing\":{\"address1\":\"1 Microsoft Way\",\"city\":\"Redmond\",\"country\":\"US\",\"postalCode\":\"98052\",\"state\":\"WA\"},\"email\":\"houssem.dellai@live.com\",\"nameFirst\":\"azureuser\",\"nameLast\":\"Dellai\",\"phone\":\"+33.762954328\"},\"dnsType\":\"AzureDns\",\"dnsZoneId\":\"/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/houssem17.com\",\"privacy\":false}}",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.DomainRegistration/domains/houssem17.com",
            "identity": [],
            "ignore_casing": false,
            "ignore_missing_property": true,
            "location": "global",
            "locks": null,
            "name": "houssem17.com",
            "output": "{}",
            "parent_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu",
            "removing_special_chars": false,
            "response_export_values": null,
            "schema_validation_enabled": true,
            "tags": {},
            "timeouts": null,
            "type": "Microsoft.DomainRegistration/domains@2022-09-01"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_dns_zone.dns_zone_parent",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_application_insights_workbook",
      "name": "workbook",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "category": "workbook",
            "data_json": "{\n  \"version\": \"Notebook/1.0\",\n  \"items\": [\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"## Azure Firewall Workbook\\r\\n---\\r\\n\"\n      },\n      \"name\": \"text - 23\"\n    },\n    {\n      \"type\": 11,\n      \"content\": {\n        \"version\": \"LinkItem/1.0\",\n        \"style\": \"tabs\",\n        \"links\": [\n          {\n            \"id\": \"20847ce8-91bc-4d8b-b878-a5a41c95c31c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Overview\",\n            \"subTarget\": \"AFOverview\",\n            \"preText\": \"Azure Firewall Overview\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"f564709d-1658-46a1-8b44-892210e13017\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Application rule log statistics\",\n            \"subTarget\": \"AFAppRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"1f6661e2-f873-4d56-879d-4d085d8cf1d4\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Network rule log statistics\",\n            \"subTarget\": \"AFNetRule\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"ef1548c5-ef55-4eaa-8a81-b049cb93b56c\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - DNS Proxy\",\n            \"subTarget\": \"AFDNSProxy\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"18a4a585-2176-4d9f-907c-8e8d5f984efa\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall Premium - IDPS\",\n            \"subTarget\": \"AFIDSIPS\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"97dc7364-961d-4c19-a730-7b9024f46b91\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Azure Firewall - Investigation\",\n            \"subTarget\": \"AFInvestigate\",\n            \"style\": \"link\"\n          }\n        ]\n      },\n      \"name\": \"links - 24\"\n    },\n    {\n      \"type\": 9,\n      \"content\": {\n        \"version\": \"KqlParameterItem/1.0\",\n        \"parameters\": [\n          {\n            \"id\": \"ab7d6c51-d7df-436c-96a2-429163aa50ec\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"TimeRange\",\n            \"type\": 4,\n            \"isRequired\": true,\n            \"isGlobal\": true,\n            \"value\": {\n              \"durationMs\": 7776000000\n            },\n            \"typeSettings\": {\n              \"selectableValues\": [\n                {\n                  \"durationMs\": 300000\n                },\n                {\n                  \"durationMs\": 900000\n                },\n                {\n                  \"durationMs\": 1800000\n                },\n                {\n                  \"durationMs\": 3600000\n                },\n                {\n                  \"durationMs\": 14400000\n                },\n                {\n                  \"durationMs\": 43200000\n                },\n                {\n                  \"durationMs\": 86400000\n                },\n                {\n                  \"durationMs\": 172800000\n                },\n                {\n                  \"durationMs\": 259200000\n                },\n                {\n                  \"durationMs\": 604800000\n                },\n                {\n                  \"durationMs\": 1209600000\n                },\n                {\n                  \"durationMs\": 2419200000\n                },\n                {\n                  \"durationMs\": 2592000000\n                },\n                {\n                  \"durationMs\": 5184000000\n                },\n                {\n                  \"durationMs\": 7776000000\n                }\n              ],\n              \"allowCustom\": false\n            }\n          },\n          {\n            \"id\": \"add90eb3-ff5f-4b19-9658-ff15c8043af5\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Workspaces\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project id, name\\r\\n| order by name desc\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::100\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::100\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"5084e141-6c56-4d7f-bd8a-09f7ef9af1bc\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Resource\",\n            \"label\": \"Azure Firewalls\",\n            \"type\": 5,\n            \"isRequired\": true,\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| project id, name\",\n            \"crossComponentResources\": [\n              \"value::selected\"\n            ],\n            \"value\": [\n              \"value::all\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [\n                \"value::all\"\n              ]\n            },\n            \"queryType\": 1,\n            \"resourceType\": \"microsoft.resourcegraph/resources\"\n          },\n          {\n            \"id\": \"13d9f6e9-9290-4b1e-b0d0-a7c0ebdc1aed\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"Help\",\n            \"label\": \"Show Help\",\n            \"type\": 10,\n            \"description\": \"This will show some help information to help you understand the page you are on\",\n            \"isRequired\": true,\n            \"typeSettings\": {\n              \"additionalResourceOptions\": []\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true },\\r\\n { \\\"value\\\": \\\"Change Log\\\", \\\"label\\\": \\\"Change Log\\\"}\\r\\n]\"\n          },\n          {\n            \"id\": \"68f2cb32-03d4-4307-8eb5-1f66dfc09a85\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"FirewallResources\",\n            \"label\": \"Show Resources\",\n            \"type\": 2,\n            \"description\": \"The is only used on the Overview page.\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\", \\\"selected\\\":true},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\" }\\r\\n]\",\n            \"value\": \"No\"\n          },\n          {\n            \"id\": \"53aa8daf-29de-40a1-9147-c0970e32fac4\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"GeoLocation\",\n            \"label\": \"GeoLocationCSV\",\n            \"type\": 2,\n            \"description\": \"Supplied as a value for GeoLocation lookup on queries: Read more here - https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin#ipv4-lookup---matching-rows-only\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"\\r\\n[\\r\\n{\\r\\n\\\"value\\\": \\\"https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv\\\", \\\"label\\\": \\\"GeoLocationDefault\\\", \\\"selected\\\": \\\"true\\\"  \\r\\n}\\r\\n]\\r\\n\\r\\n\"\n          }\n        ],\n        \"style\": \"pills\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n      },\n      \"name\": \"parameters - 1\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Overview - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0\\t|Initial Version|\\r\\n|V1.1.0\\t|Split up the data sets, Overview, Application Rule Logs, Network Rule Logs, DNS Proxy Logs. Added in Investigation visibility with Azure Firewall + Azure Graph. Added in visibility to multiple workspaces and filtering to Firewall resources. |\\r\\n|V1.2.0 | Added new filteres, \\\"Show Help\\\", \\\"Show Resources\\\", \\\"GeoLocationCSV\\\", Updated query parsing to the Overview queries. Improved overall performance in large data scale performance with new parsing requirements.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFOverview\"\n              }\n            ],\n            \"name\": \"text - 40\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - App Rules - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|v1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added Web Category.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFAppRule\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 63\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - Network Rule - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added in new Querires for Azure Firewall features, parsing is now used differently. Added in GeoLocation queries, updated main query to use GeoLocation data.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFNetRule\"\n              }\n            ],\n            \"name\": \"text - 64\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall - DNSProxy - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.1.0 | Initial Version\\r\\n|V1.2.0 | No modifications were made\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFDNSProxy\"\n              }\n            ],\n            \"name\": \"text - 65\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.2.0 | Initial Version\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFIDSIPS\"\n              },\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              }\n            ],\n            \"name\": \"text - 66\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"### Azure Firewall Prem - IDPS - Change Log\\r\\n|Version|Description|\\r\\n|---|---|\\r\\n|V1.0.0 | Initial Version\\r\\n|V1.2.0 | Added IDPS Logs to the investgation experience, Added in GeoLocation infromation. Updated the KQL logic to be faster for large data volume.\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"Help\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"Change Log\"\n              },\n              {\n                \"parameterName\": \"selectedTab\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"AFInvestigate\"\n              }\n            ],\n            \"name\": \"text - 67\"\n          }\n        ]\n      },\n      \"name\": \"ChangeLogGroup\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Overview page has the following features.\\r\\n\\r\\n- All Firewall Data Log Analytics Volume (Total)\\r\\n- All Firewall Data Log Analytics Volume (Per Firewall)\\r\\n- All Firewall Event Categories\\r\\n- All Firewall Event Categories over time\\r\\n- Azure Firewall Metrics data\\r\\n  - Traffic\\r\\n  - SNAT Port\\r\\n  - Network Rule Count\\r\\n  - Application Rule Count\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nStart by looking at the workbook filters, examples would be TimeRange, Workspace, Azure Firewall. Note these are filtered based on your azure portal settings of \\\"Default subscription filter\\\". Selecting more resources or more workspaces has an impact on speed of results depending on the data volume of your workspaces. Why TimeRange is a large factor when looking at looking at extremely large data sets of volume(example over 1 Billion logs) so multiple filters have been offered to finetune the results without having to build your own queries.\\r\\n\\r\\nIf this is your first time looking at this workbook, my suggestion is to use 14 days(this is the fastest cached data in Log Analytics), a single workspace, a single firewall, if you're wanting to see the results of one firewall. Best to know where your firewall is sending it's logs too to confirm you didn't select a workspace that doesn't have that firewalls data. How to check, go to the Azure Firewall, click Diagnostic settings, see what Log Analytics workspace is currently configured.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, and sending to workspace your azure ad user had RBAC permissions to. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\\r\\n- Azure Metrics requires resource permissions of the Firewall you're wanting data on. \"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFOverview\"\n            },\n            \"name\": \"text - 59\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Application rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Unique Source IP Address*\\r\\n- Application Rule Usage\\r\\n- Denied/Allowed FQDN over time\\r\\n- Denied/Allowed FQDN count\\r\\n- Denied/Allowed Web Categories over time\\r\\n- Denied/Allowed Web Categories count\\r\\n- Pre-parsed Azure Firewall Application Rule Logs with a search feature.\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the unique source of IP addresses based on the global filters you have in place, this is showing only the top 10 IPAddresses, you can modify the KQL query to show more if needed if you click the \\\"Edit\\\" button. We added in the logic to show the volume over time, under the IP address/count information. If you click on the highest count (my example is 415,786 count, 10.0.24.4 ipaddress) it'll filter everything on the Application rule log statistic page to this IP address specifically. (Only Exception is the Rule Usage). Note this could cause other data sets to become blank as a result, sometimes you only have Approved or Denied access based on the configuration of the firewall.\\r\\n\\r\\nIf you're wanting to search for something a little more specific other than IPAddress filter, you can use the \\\"Search\\\" bar under the \\\"All IP Address events\\\" query to create a custom filter to the parsed logs. Example could be an FQDN \\\"wdcp.microsoft.com\\\" to pull up those logs specifically with that name in it.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Application Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFAppRule\"\n            },\n            \"name\": \"text - 1\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Network rule log statistics page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- Rule Actions*\\r\\n\\r\\n- Target Ports*\\r\\n\\r\\n- DNAT Actions*\\r\\n\\r\\n- GeoLocation\\r\\n\\r\\n- Actions over time(Time scrub enabled)\\r\\n\\r\\n- Pre-parsed Network Rule data with GeoLocation added\\r\\n\\r\\n  *Note: GeoLocation is using an public file, you have to modify your GeoLocation Global Filter tab to add your own data.*\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll get see pie charts on the screen, each of these can be clicked on to filter the data below. You'll have to click on the color of the wheel in order to use the filter feature. Downfall of this, if it's an extremely small data set, its hard to click on that color due to the challenge of even seeing it. These filters are a top down approach, meaning what clicked on top, filters below. If you'd like, feel free to test this out now. Under \\\"Target Ports, filterable by Target Port\\\" find port 53 ( pretty common port). Click on the wheel with the color that's associated to port 53. You'll see everything change below only showing data that has port 53 associated to it. If you'd like to remove this filter you have a few options. \\r\\n\\r\\n1. Click the \\\"Go back\\\" at the top right of the wheel\\r\\n2. Refresh the whole workbook\\r\\n3. Refresh the whole browser window\\r\\n\\r\\n*A note about the new feature added \\\"GeoLocation\\\", this is public data shared through the Log Analytics developer team to show the feature to associate IP addresses with a GeoLocation file. This had been added to the workbook to show you what's possible, it's encouraged for you to use your own data which could be further enriched. If you had Lat/Long data, you could even add in a map feature into this workbook to show you where the traffic is mostly.*\\r\\n\\r\\nMid-way down the page you'll see the \\\"Actions, by time\\\", if we saw a large spike and wanted to lower the window of traffic, select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th. When i was looking over 14 days of time. This will filter the \\\"All IP Addresses events\\\" down to this new time window.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires Network Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFNetRule\"\n            },\n            \"name\": \"text - 2\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - DNS Proxy page has the following features.\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- DNS Traffic by count (Time scrub enabled)\\r\\n- DNS Proxy by Request Name, by Count*\\r\\n- DNS Proxy Request by ClientIP, by Count*\\r\\n- Count over time of Proxy Requests by ClientIP\\r\\n- Pre-parsed DNS Proxy data\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see the DNS Proxy traffic count, this is a great way to start to narrow down the proxy traffic over a period of time. Example we're looking at the 14 day window, but there was an odd spike or dip in proxy traffic, why? use the time scrub feature to select on the left side(where you're wanting to start, before the event occurred) drag, and move it over to the right. Example March 24th - March 27th.\\r\\n\\r\\nAfter adding our second time filter to the page, move forward to looking at the DNS requests. You might see a large spike in a specific DNS request, could be something you're not even familiar with. Using an example, i see a DNS request for \\\"md-fpp31tsvhx4s.blob.core.windows.net\\\" for 300K times in my current filters. By selecting this Request Name, it'll filter on the right showing me which clients are requesting this DNS traffic. Which after clicking on my request, i see 2 different IP addresses now. Oddly though, one is much smaller than the other. Lets select that Ip address to add an additional filter to the logs. Now we can see the logs related to that machine client ip, specifically around that DNS request name. This might help you narrow down if there are any actions that need to be taken on your firewall.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Diagnostic settings enabled, specifically requires DNS Proxy Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFDNSProxy\"\n            },\n            \"name\": \"text - 3\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall Premium- IDPS page has the following features.\\r\\n\\r\\n*As noted on the title, these logs are only created on the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IDPS Actions Count*\\r\\n- IDPS Protocol Count*\\r\\n- IDPS SignatureID Count*\\r\\n- IDPS SourceIP Count*\\r\\n- Azure Firewall IDPS count over time (Time Scrub Enabled)\\r\\n- Azure Firewall IDPS logs with GeoLocation\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nStarting out you'll see Pie Charts offering multiple filtering options to your IDPS logs, showing Alerts, Protocols, SignatureIDs and Sources of the logs. Lets start by selecting an ClientIP address(SourceIP) under the \\\"IDPS SourceIP Count, filterable by SourceIP\\\". I clicked on the largest one, you might of noticed most of the traffic under the IDPS logs are alerts, Mostly TCP to this ClientIP address and there could be some specific SignatureID's are being triggered. Looking further into the logs, you should expand the Source IP to see the different IP Addresses this client has talked to within the past 14 days(current global filter). The majority of the traffic is going to XX.XX.XX.XX, which is something to remember.\\r\\n\\r\\nGoing further down, you might noticed a spike in traffic, lets use the time scrub feature to narrow down the time window to that spike. Start by selecting on the left side(where you're wanting to start time to be, before the event occurred) drag, and move it over to the right(the end time). Example March 24th - March 27th.\\r\\n\\r\\n*Note; The GeoLocation + Data can take a long time to refresh.*\\r\\n\\r\\nYou should now be able to see data we filtered down to, with it based on  GeoLocation/Signature ID's\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- Azure Firewall Premium Diagnostic settings enabled, specifically requires IDPS Diagnostic logs to be enabled for the workspace. You need a minimum of read rights to the AzureDiagnostics table within the Log Analytics workspace.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFIDSIPS\"\n            },\n            \"name\": \"text - 4\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"##### What's on this page?\\r\\n\\r\\nThe Azure Firewall - Investigation page has the following features.\\r\\n\\r\\n*Note, this is a combination of all the logs within the Azure Firewall workbook. Some logs are from the Azure Firewall Premium sku*\\r\\n\\r\\nAnything that can be used as a filter within the workbook, you'll see a * next to it. If it's filterable, this mean you can click on something within the data set that will be pushed down the workbook for more additional filtering.\\r\\n\\r\\n- IFQDN Traffic by Count*\\r\\n- SourceIP Address*\\r\\n- SourceIPAddress Resource Lookup (Azure Resource Graph)\\r\\n- FQDN Lookup logs\\r\\n- Azure Firewall Threat Intel\\r\\n- Azure Firewall Premium with GeoLocation- IDPS\\r\\n\\r\\n##### How to use this page?\\r\\n\\r\\nIf  you're not comfortable with the filters on this workbook, my suggestion is to use the get-help on the overview page to get started.\\r\\n\\r\\nThis is the page where we narrow down everything, You should considering adding your own twist based on your own investigations to this page. Leverage this as a template of where to start and how to move forward.\\r\\n\\r\\nStarting out we see FQDN and IP Address are the page's first filters offered.\\r\\n\\r\\nLooking at source count, you might see something that has a large count. Like the following example \\\"watson.telemetry.microsoft.com\\\".  Click on the \\\"Deny\\\"/'Count' line to use the filter feature for the whole page.\\r\\n\\r\\nThis narrowed down our large list of client (SourceIP) address to a smaller list, which could be used to find out which client is being the loudest or maybe something that sneaked in that wasn't suppose to be talking to this FQDN in the first place. Click on an IPAddress(SourceIP). \\r\\n\\r\\nAzure Resource Graph is then used to find which machine this is, which Azure Resource NIC, Public IP address, Subnet, etc.\\r\\n\\r\\nUse the other data sets to help see the logs you've filtered based on the FQDN + IPAddress above. \\r\\n\\r\\n*Note, FQDN isn't required for the Azure Resource Graph lookup.*\\r\\n\\r\\nSome log sources might be blank, that's perfectly acceptable in this scenario as we're filtering down to alerts and events.\\r\\n\\r\\n##### What's required for this workbook to function?\\r\\n\\r\\n- All Azure Firewall Diagnostic Logs\\r\\n- RBAC Permissions for Azure Resource Graph lookup.\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"selectedTab\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"AFInvestigate\"\n            },\n            \"name\": \"text - 5\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"Help\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"name\": \"Get-Help\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - overview\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"Main title\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"where type =~ 'Microsoft.Network/azureFirewalls'\\r\\n| extend Tier = trim(' ', tostring(properties.sku.tier))\\r\\n| extend Status = trim(' ', tostring(iif(isempty(properties.ipConfigurations.[0].properties.provisioningState),properties.provisioningState,properties.ipConfigurations.[0].properties.provisioningState)))\\r\\n| extend Premium = iff(Tier == \\\"Premium\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend Standard = iff(Tier == \\\"Standard\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| extend ProvisionedState = iff(Status == \\\"Succeeded\\\", \\\"Running\\\", \\\"Not Running\\\")\\r\\n| extend Policy = trim(' ', tostring(properties.firewallPolicy.id))\\r\\n| extend ApplicationRule1 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule2 = trim(' ', tostring(properties.applicationRuleCollections.[0].id))\\r\\n| extend ApplicationRule3 = iff(ApplicationRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend ApplicationRule4 = iff(ApplicationRule2 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend ApplicationRuleClassic = strcat(ApplicationRule3, ApplicationRule4)\\r\\n| extend NetworkRule1 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule2 = trim(' ', tostring(properties.networkRuleCollections.[0].id))\\r\\n| extend NetworkRule3 = iff(NetworkRule1 == \\\"\\\", \\\"N/A\\\", \\\"\\\")\\r\\n| extend NetworkRule4 = iff(NetworkRule1 contains \\\"subscription\\\", \\\"Configured\\\", \\\"\\\")\\r\\n| extend NetworkRuleClassic = strcat(NetworkRule3, NetworkRule4)\\r\\n| project Firewall=id, Premium, Standard, ProvisionedState,FirewallPolicy= Policy, ApplicationRuleClassic, NetworkRuleClassic, location, resourceGroup, subscriptionId, tenantId\",\n        \"size\": 1,\n        \"title\": \"Azure Firewall Resource List\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Premium\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"Standard\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Yes\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"No\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ProvisionedState\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Running\",\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Not Running\",\n                    \"representation\": \"grayBlue\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"ApplicationRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"NetworkRuleClassic\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"colors\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"N/A\",\n                    \"representation\": \"gray\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"green\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"FirewallResources\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Yes\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 60\",\n      \"styleSettings\": {\n        \"margin\": \"0\"\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics \\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 16\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\" \\r\\n| summarize Volume=count() by Resource, bin(TimeGenerated, {TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Events, by firewall over time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportParameterName\": \"TopEvent\",\n        \"exportDefaultValue\": \"{\\\"Resource\\\":\\\"*\\\",\\\"ResourceGroup\\\":\\\"*\\\"}\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Resource\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          },\n          \"showBorder\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Firewall per Resource Group\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName\\r\\n    | project Category=OperationName, Volume\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events, by category: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"Category\",\n        \"exportParameterName\": \"SelectedCategory\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"Category\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events by category\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| project Category, ResourceType, OperationName, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | summarize Volume=count() by OperationName, bin(TimeGenerated, {TimeRange:grain})\\r\\n    | project Category=OperationName, Volume, TimeGenerated\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n    | where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n    | summarize Volume=count() by Category, bin(TimeGenerated, {TimeRange:grain})\\r\\n)\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Events categories, by time: Query Time({$queryTime})\",\n        \"noDataMessage\": \"There are no firewall events being feed within the selected workspaces. If you believe the selection is correct, confirm logging has been enabled for the Azure Firewall and feeding into the selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 4,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"Events categories by time\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"### Firewall Metrics\\r\\nThe data below dosen't read from the Log Analytics workpsace, it's reading directly from the resources which requires resource visibility. \\r\\nClick [here for more information on Azure Metrics](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/data-platform-metrics)\\r\\n\",\n        \"style\": \"info\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"name\": \"text - 39\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--Throughput\",\n            \"aggregation\": 4,\n            \"splitBy\": null,\n            \"columnName\": \"All Firewall Throughput Average\"\n          }\n        ],\n        \"title\": \"Average Throughput of Firewall Traffic\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--SNATPortUtilization\",\n            \"aggregation\": 4,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"SNAT Port Utilization\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--NetworkRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Network Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy\"\n    },\n    {\n      \"type\": 10,\n      \"content\": {\n        \"chartId\": \"workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15\",\n        \"version\": \"MetricsItem/2.0\",\n        \"size\": 0,\n        \"chartType\": 2,\n        \"resourceType\": \"microsoft.network/azurefirewalls\",\n        \"metricScope\": 0,\n        \"resourceParameter\": \"Resource\",\n        \"resourceIds\": [\n          \"{Resource}\"\n        ],\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeContext\": {\n          \"durationMs\": 7776000000\n        },\n        \"metrics\": [\n          {\n            \"namespace\": \"microsoft.network/azurefirewalls\",\n            \"metric\": \"microsoft.network/azurefirewalls--ApplicationRuleHit\",\n            \"aggregation\": 1,\n            \"splitBy\": null\n          }\n        ],\n        \"title\": \"Application Rule Hitcount (SUM)\",\n        \"gridSettings\": {\n          \"rowLimit\": 10000\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFOverview\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"metric - 25 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Application rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Amount=count() by SourceIP\\r\\n| join kind = inner\\r\\n( union (\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n    | make-series Trend = count() default = 0 on bin(TimeGenerated, 1d) from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SourceIP) on SourceIP\\r\\n    | project-away SourceIP1, TimeGenerated\\r\\n    | top 10 by Amount\\r\\n    | sort by Amount\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Unique Source IP addresses, filterable by SelectedSourceIP: Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"SourceIP\",\n        \"exportParameterName\": \"SelectedSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"tiles\",\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"Amount\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"subtitleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"secondaryContent\": {\n            \"columnMatch\": \"Trend\",\n            \"formatter\": 9,\n            \"formatOptions\": {\n              \"showIcon\": true\n            }\n          },\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 4\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where RuleCollection matches regex \\\".*\\\" \\r\\n| summarize Count = count(), last_log = datetime_diff(\\\"second\\\", now(), max(TimeGenerated)) by RuleCollection, Rule, WebCategory\",\n        \"size\": 1,\n        \"title\": \"Application Rule Usage : Query Time ({$queryTime})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"last_log\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"greenRed\"\n              },\n              \"numberFormat\": {\n                \"unit\": 24,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_last_log_4\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_last_log_4\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 36\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Denied FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"tileSettings\": {\n          \"showBorder\": false\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 3\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_heatmap_count__1\",\n              \"sortOrder\": 2\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_heatmap_count__1\",\n            \"sortOrder\": 2\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ) \\r\\n| where Action == \\\"Allow\\\"\\r\\n| summarize count() by FQDN, bin(TimeGenerated, 6h)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed FQDN's over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"   \\r\\n| summarize count() by FQDN\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Allowed FQDN's by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n    (\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n    | where Resource in~ (split(\\\"AzureFirewall_hub1, firewall-lat, FW-Test-DNATPIP, lg-NS-FW-netsec, SOC-NS-FW\\\", \\\", \\\"))\\r\\n    | project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" URL \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s has \\\". No rule matched\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"Rule Collection\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n    | where msg_s has \\\" Reason:\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\"TLS extension was missing\\\"\\r\\n        and msg_s !has \\\"No rule matched\\\"\\r\\n        and msg_s !has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    ),\\r\\n    (\\r\\n    materializedData\\r\\n    | where msg_s !has \\\"Web Category:\\\"\\r\\n        and msg_s !has \\\". Url\\\"\\r\\n        and msg_s !has \\\" Reason: \\\"\\r\\n    | where msg_s has \\\"Rule Collection Group\\\"\\r\\n    | parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n    )\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '*' == SourceIP or '*' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated, 6hrs)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Allow\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Allowed Web Categories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\" . Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize count() by WebCategory, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Denied Web Categories over time\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"chartSettings\": {\n          \"showLegend\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 5 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\n(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection:\\\" RuleCollection \\\". Rule: \\\" Rule \\\". Web Category: \\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where isnotempty(WebCategory)\\r\\n| where Action == \\\"Deny\\\"\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by WebCategory\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Denied Web Catgories by count\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 2 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{SelectedSourceIP}' == SourceIP or '{SelectedSourceIP}' == \\\"*\\\"  \\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Application Rule logs within the selected workspaces. If you believe the selection is correct, confirm Application Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFAppRule\"\n      },\n      \"name\": \"query - 9\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"---\\r\\n# Azure Firewall - Network rule log statistics\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"text - 14\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by Action\",\n        \"size\": 3,\n        \"title\": \"Rule actions, filterable by RuleAction\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"RuleAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 7\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize Count=count() by DestinationPort\",\n        \"size\": 3,\n        \"title\": \"Target ports, filterable by TargetPort\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"DestinationPort\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 10\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| summarize Amount=count() by NatDestination\\r\\n\",\n        \"size\": 3,\n        \"title\": \"DNAT actions, filterable by NatDestination\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"NatDestination\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 12\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| project DestinationIP\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize count() by continent_name\\r\\n\",\n        \"size\": 2,\n        \"title\": \"GeoLocation\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showRefreshButton\": true,\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"netcontinent\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 61\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize amount = count() by Action , SourceIP\\r\\n| sort by amount desc\",\n        \"size\": 0,\n        \"title\": \"Rule actions, by IP addresses\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Action\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"amount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"eventCount\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"min\": 0,\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Action\"\n            ],\n            \"expandTopLevel\": false,\n            \"finalBy\": \"Action\"\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 8\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"   \\r\\n| summarize AMOUNT=count() by DestinationPort, SourceIP\\r\\n| sort by AMOUNT desc\",\n        \"size\": 0,\n        \"title\": \"Target ports, by Source IP: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"DestinationPort\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"AMOUNT\",\n              \"formatter\": 3,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"DestinationPort\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 11\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where Action == \\\"DNAT'ed\\\"\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize Amount=count() by NatDestination, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNAT'ed over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| project DestinationIP, TimeGenerated\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n| summarize Amount=count() by continent_name, bin(TimeGenerated, {TimeRange:grain})\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"GeoLocation over time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 13 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\" and  msg_s has \\\"Action\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\".. Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize count() by Action, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Actions, by time\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"ActionsByTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 15\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nlet materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where OperationName \u003c\u003e \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\n// Azure Firewall Networking - Standard Log\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Type=\\\" and msg_s !has \\\"DNAT'ed\\\" and msg_s !has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking with ICMP\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Type=\\\"\\r\\n| parse msg_s with Protocol \\\" Type=\\\" ICMPType \\\" request from \\\" SourceIP \\\" to \\\" DestinationIP \\\". Action: \\\" Action\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule - Standard\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s !has \\\". Rule Collection:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Networking DNAT rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"DNAT'ed\\\" and msg_s has \\\". Rule Collection:\\\" and msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\" was \\\" Action \\\" to \\\" NatDestination \\\". Policy: \\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall not using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Rule Collection:\\\" and msg_s !has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n),\\r\\n(\\r\\n// Azure Firewall Network rule (firewall using policy)\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Policy:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestinationIP \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule Name: \\\" Rule\\r\\n)\\r\\n| where '{DestinationPort}' == DestinationPort or '{DestinationPort}' == \\\"*\\\"\\r\\n| where \\\"{RuleAction}\\\" == Action or \\\"{RuleAction}\\\" == \\\"*\\\"\\r\\n| where '{NatDestination}' == NatDestination or '{NatDestination}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated,Protocol, ICMPType, Action,SourceIP, SourcePort, DestinationIP , DestinationPort , NatDestination, ResourceId , ResourceGroup , SubscriptionId\\r\\n| evaluate ipv4_lookup (geoData, DestinationIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"All IP addresses events with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no Network Rule logs within the selected workspaces. If you believe the selection is correct, confirm Network Rule logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"ActionsByTimeBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFNetRule\"\n      },\n      \"name\": \"query - 22\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall -DNS Proxy\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"text - 41\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project Resource, TimeGenerated\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Traffic by count per Firewall: Query Time({$queryTime}) \",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| summarize count() by Request_Name\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy count by Request Name, filterable by Request_Name\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"Request_Name\",\n        \"exportParameterName\": \"DNSRequestName\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"DNSProxy Request count by ClientIP, filterable by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"exportFieldName\": \"ClientIP\",\n        \"exportParameterName\": \"DNSClientIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize count() by ClientIP, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\n        \"size\": 0,\n        \"title\": \"DNS Proxy Request over time by ClientIP\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"linechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 30 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallDnsProxy\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with \\\"DNS Request: \\\" ClientIP \\\":\\\" ClientPort \\\" - \\\" QueryID \\\" \\\" Request_Type \\\" \\\" Request_Class \\\" \\\" Request_Name \\\". \\\" Request_Protocol \\\" \\\" Request_Size \\\" \\\" EDNSO_DO \\\" \\\" EDNS0_Buffersize \\\" \\\" Responce_Code \\\" \\\" Responce_Flags \\\" \\\" Responce_Size \\\" \\\" Response_Duration\\r\\n| project-away msg_s\\r\\n| where '{DNSClientIP}' == ClientIP or '{DNSClientIP}' == \\\"*\\\"\\r\\n| where '{DNSRequestName}' == Request_Name or '{DNSRequestName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, ResourceId, ClientIP, ClientPort, QueryID, Request_Type, Request_Class, Request_Name, Request_Protocol, Request_Size, EDNSO_DO, EDNS0_Buffersize, Responce_Code, Responce_Flags, Responce_Size, Response_Duration, SubscriptionId\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"DNS Proxy Information: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There are no DNS Proxy logs within the selected workspaces. If you believe the selection is correct, confirm DNS Proxy logs are enabled for the Azure Firewall and feeding into this selected workspace. Reference Docs: https://docs.microsoft.com/en-us/azure/firewall/\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"DNSTimeBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFDNSProxy\"\n      },\n      \"name\": \"query - 30\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall Premium - IDPS\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"text - 42\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| summarize count() by Action\",\n        \"size\": 2,\n        \"title\": \"IDPS Actions Count, filterable by Action\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"noDataMessageStyle\": 2,\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSAction\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 2,\n        \"title\": \"IDPS Protocol Count, filterable by Protocol\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSProtocol\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\\r\\n\",\n        \"size\": 2,\n        \"title\": \"IDPS SignatureID Count, filterable by SignatureID\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSignatureID\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, DestIP\\r\\n| sort by count_ desc\",\n        \"size\": 2,\n        \"title\": \"IDPS SourceIP Count, filterable by SourceIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"IDSIPSSourceIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Action\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Actions by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 44 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by Protocol\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS Protocols by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n//| project-away Category, ResourceId, msg_s, SubscriptionId, ResourceProvider, ResourceType, OperationName, Type\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize count() by SignatureID\",\n        \"size\": 0,\n        \"title\": \"Filtered IDPS SignatureIDs by Count\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| summarize Volume=count() by DestIP, SourceIP\\r\\n| sort by Volume desc\",\n        \"size\": 0,\n        \"title\": \"Filtered SourceIP, filterable by DestIP\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"DestIP\",\n        \"exportParameterName\": \"IDSIPSDestIP\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Volume\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        },\n        \"tileSettings\": {\n          \"showBorder\": false,\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        },\n        \"graphSettings\": {\n          \"type\": 0,\n          \"topContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 1\n          },\n          \"centerContent\": {\n            \"columnMatch\": \"Volume\",\n            \"formatter\": 1,\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"maximumSignificantDigits\": 3,\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"customWidth\": \"25\",\n      \"name\": \"query - 45 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"AzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, SignatureID, Message, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| summarize count() by Resource, bin(TimeGenerated,{TimeRange:grain})\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall IDPS count over time\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"visualization\": \"timechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SourceIP\",\n              \"formatter\": 5\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"SourceIP\"\n            ],\n            \"expandTopLevel\": false\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| project TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| where '{IDSIPSAction}' == Action or '{IDSIPSAction}' == \\\"*\\\"\\r\\n| where '{IDSIPSProtocol}' == Protocol or '{IDSIPSProtocol}' == \\\"*\\\"\\r\\n| where '{IDSIPSSignatureID}' == SignatureID or '{IDSIPSSignatureID}' == \\\"*\\\"\\r\\n| where '{IDSIPSSourceIP}' == SourceIP or '{IDSIPSSourceIP}' == \\\"*\\\"\\r\\n| where '{IDSIPSDestIP}' == DestIP or '{IDSIPSDestIP}' == \\\"*\\\"\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\",\n        \"size\": 0,\n        \"showAnalytics\": true,\n        \"title\": \"Azure Firewall IDPS logs with GeoLocation: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"This feature is in Azure Firewall Premium; For more information go to https://docs.microsoft.com/en-us/azure/firewall/premium-features\",\n        \"timeContextFromParameter\": \"AFIDSIPSBrush\",\n        \"timeBrushParameterName\": \"AFIDSIPSBrush\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFIDSIPS\"\n      },\n      \"name\": \"query - 45 - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Firewall - Investigation\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"text - 43\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| summarize count() by FQDN, Action\\r\\n| sort by count_ desc\",\n        \"size\": 0,\n        \"title\": \"FQDN Traffic by Count, filterable by FQDN: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportFieldName\": \"FQDN\",\n        \"exportParameterName\": \"FullName\",\n        \"exportDefaultValue\": \"*\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"FQDN\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"minimumIntegerDigits\": 1,\n                  \"maximumFractionDigits\": 1,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"FQDN\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"35\",\n      \"name\": \"query - 29 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy:\\\" Policy \\\". Rule Collection Group:\\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP \u003c\u003e \\\"\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize count() by SourceIP, SubscriptionId\\r\\n| sort by count_\",\n        \"size\": 0,\n        \"title\": \"SourceIP Address, filterable: Query Time({$queryTime})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"exportedParameters\": [\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIP\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"privateIPAddress\"\n          },\n          {\n            \"fieldName\": \"SourceIP\",\n            \"parameterName\": \"InvestigateIPWC\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"*\"\n          },\n          {\n            \"fieldName\": \"SubscriptionId\",\n            \"parameterName\": \"SelectedSubscriptionId\",\n            \"parameterType\": 1,\n            \"defaultValue\": \"-\"\n          }\n        ],\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SubscriptionId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"count_\",\n              \"formatter\": 8,\n              \"formatOptions\": {\n                \"palette\": \"whiteBlack\"\n              },\n              \"numberFormat\": {\n                \"unit\": 17,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"useGrouping\": false,\n                  \"maximumSignificantDigits\": 4\n                }\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"15\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Resources\\r\\n| where type =~ 'microsoft.network/networkinterfaces'\\r\\n| where properties contains \\\"{InvestigateIP}\\\"\\r\\n| extend NSG = properties['networkSecurityGroup']['id']\\r\\n| parse NSG with \\\"/subscriptions/\\\" NetworkSecurityGroup_Sub \\\"/resourceGroups/\\\" NetworkSecurityGroup_rg \\\"/providers/Microsoft.Network/networkSecurityGroups/\\\" NetworkSecurityGroup_Name\\r\\n| project id, PrivateIPAddress = tostring(properties['ipConfigurations'][0]['properties']['privateIPAddress']),  PublicIPAddress = tostring(properties['ipConfigurations'][0]['properties']['publicIPAddress']['id']), VirtualMachine = tostring(properties['virtualMachine']['id']), subnet = tostring(properties['ipConfigurations'][0]['properties']['subnet']['id']), NetworkSecurityGroup = NetworkSecurityGroup_Name, properties, subscriptionId, tenantId\",\n        \"size\": 0,\n        \"title\": \"SourceIPAddress Resource Lookup: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"exportFieldName\": \"id\",\n        \"exportParameterName\": \"Testid\",\n        \"exportDefaultValue\": \"*\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"value::selected\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"properties\",\n              \"formatter\": 5\n            }\n          ],\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"SourceIP\",\n            \"formatter\": 4,\n            \"formatOptions\": {\n              \"palette\": \"orange\"\n            },\n            \"numberFormat\": {\n              \"unit\": 0,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          },\n          \"showBorder\": true,\n          \"size\": \"auto\"\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 33 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallApplicationRule\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| project ResourceId,ResourceGroup,SubscriptionId, msg_s, Resource, TimeGenerated);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url:\\\" Url \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\" and msg_s has \\\". No rule matched\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". No rule matched\\\" *\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Web Category:\\\" and msg_s !has \\\". Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection:\\\" RuleCollection \\\". Rule:\\\" Rule \\\". Web Category:\\\" WebCategory\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". \\\" RuleCollection \\\". \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\"Rule Collection\\\" and msg_s !has \\\"TLS extension was missing\\\"\\r\\n| where msg_s has \\\" Reason:\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\". Action: \\\" Action \\\". Reason: \\\" Rule \\\".\\\"\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has  \\\"TLS extension was missing\\\" and msg_s !has \\\"No rule matched\\\" and msg_s !has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Web Category:\\\" and  msg_s !has \\\". Url\\\" and msg_s !has \\\" Reason: \\\"\\r\\n| where msg_s has \\\"Rule Collection Group\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". Policy: \\\" Policy \\\". Rule Collection Group: \\\" RuleCollectionGroup \\\". Rule Collection: \\\" RuleCollection \\\". Rule: \\\" Rule\\r\\n)\\r\\n| where SourceIP == \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where FQDN == \\\"{FullName:label}\\\" or '{FullName}' == \\\"*\\\"\\r\\n| summarize by TimeGenerated, FQDN, Protocol, Action, SourceIP, SourcePort, DestinationPort , ResourceId , ResourceGroup , RuleCollection, Rule, WebCategory, SubscriptionId\\r\\n\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"FQDN Lookup logs: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 33\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"let materializedData =\\r\\nmaterialize(\\r\\nAzureDiagnostics\\r\\n| where Category == \\\"AzureFirewallNetworkRule\\\"\\r\\n| where OperationName == \\\"AzureFirewallThreatIntelLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| where msg_s \u003c\u003e \\\" request from  to . Action: . ThreatIntel: \\\"\\r\\n| project msg_s, Resource, TimeGenerated,ResourceId , ResourceGroup , SubscriptionId);\\r\\nunion\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Url: \\\" Url \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n),\\r\\n(\\r\\nmaterializedData\\r\\n| where msg_s !has \\\"Url\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" FQDN \\\":\\\" DestinationPort \\\". Action: \\\" Action \\\". ThreatIntel: \\\" ThreatIntelMsg\\r\\n)\\r\\n| summarize by TimeGenerated, Protocol, SourceIP, SourcePort, FQDN, DestinationPort, Url, Action, ThreatIntelMsg\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Threat Intel: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"noDataMessage\": \"There is no Azure Firewall Threat Intel for your filtered results\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"rowLimit\": 2000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"TimeGenerated\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"TimeGenerated\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 29\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"//reference list posted here : https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\\r\\nlet geoData = externaldata\\r\\n(network:string,geoname_id:string,continent_code:string,continent_name:string,\\r\\ncountry_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)\\r\\n[@\\\"{GeoLocation}\\\"] with (ignoreFirstRecord=true, format=\\\"csv\\\");\\r\\nAzureDiagnostics\\r\\n| where ResourceType == \\\"AZUREFIREWALLS\\\"\\r\\n| where OperationName == \\\"AzureFirewallIDSLog\\\"\\r\\n| where Resource in~ (split(\\\"{Resource:label}\\\", \\\", \\\"))\\r\\n| where msg_s contains \\\"{InvestigateIPWC:label}\\\" or '{InvestigateIPWC}' == \\\"*\\\"\\r\\n| parse msg_s with Protocol \\\" request from \\\" SourceIP \\\":\\\" SourcePort \\\" to \\\" DestIP \\\":\\\" DestPort \\\". Action: \\\" Action \\\". Signature: \\\" SignatureID \\\". IDS:\\\" Message \\\". Priority:\\\" Priority \\\". Classification:\\\" Classification\\r\\n| summarize by TimeGenerated, SignatureID, Message, Priority, Classification, Protocol, SourceIP, SourcePort, DestIP, DestPort, Action, Resource\\r\\n| evaluate ipv4_lookup (geoData, DestIP,  network, false)\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Azure Firewall Premium with GeoLocation- IDPS: Query Time({$queryTime}) : Total Rows({$rowCount})\",\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspaces}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"Message\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"country_name\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"$gen_group\",\n              \"formatter\": 0,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"60ch\"\n              }\n            }\n          ],\n          \"hierarchySettings\": {\n            \"treeType\": 1,\n            \"groupBy\": [\n              \"Message\",\n              \"country_name\"\n            ],\n            \"expandTopLevel\": true\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"AFInvestigate\"\n      },\n      \"name\": \"query - 58\"\n    }\n  ],\n  \"fallbackResourceIds\": [\n    \"Azure Monitor\"\n  ],\n  \"fromTemplateId\": \"sentinel-UserWorkbook\",\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}\n",
            "description": "",
            "display_name": "Azure Firewall Monitor Workbook",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Insights/workbooks/85b3e8bb-fc93-40be-83f2-98f6bec18ba0",
            "identity": [],
            "location": "swedencentral",
            "name": "85b3e8bb-fc93-40be-83f2-98f6bec18ba0",
            "resource_group_name": "rg-lzaks-hub-weu",
            "source_id": "azure monitor",
            "storage_container_id": "",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg",
            "data.http.firewall_workbook"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_bastion_host",
      "name": "bastion_host",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "copy_paste_enabled": true,
            "dns_name": "bst-1ce0f174-0286-4097-af55-e73cbd75e646.bastion.azure.com",
            "file_copy_enabled": true,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/bastionHosts/bastion-host",
            "ip_configuration": [
              {
                "name": "configuration",
                "public_ip_address_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion",
                "subnet_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureBastionSubnet"
              }
            ],
            "ip_connect_enabled": true,
            "location": "swedencentral",
            "name": "bastion-host",
            "resource_group_name": "rg-lzaks-hub-weu",
            "scale_units": 2,
            "shareable_link_enabled": true,
            "sku": "Standard",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null,
            "tunneling_enabled": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_public_ip.public_ip_bastion",
            "azurerm_resource_group.rg",
            "azurerm_subnet.subnet_bastion",
            "azurerm_virtual_network.vnet_hub"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_dns_a_record",
      "name": "a_record_test",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "fqdn": "test.apps.houssem17.com.",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/apps.houssem17.com/A/test",
            "name": "test",
            "records": [
              "100.101.102.103"
            ],
            "resource_group_name": "rg-lzaks-hub-weu",
            "tags": {},
            "target_resource_id": "",
            "timeouts": null,
            "ttl": 300,
            "zone_name": "apps.houssem17.com"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "azurerm_dns_zone.dns_zone_apps",
            "azurerm_dns_zone.dns_zone_parent",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_dns_a_record",
      "name": "dns_a_record",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "fqdn": "test.houssem17.com.",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/houssem17.com/A/test",
            "name": "test",
            "records": [
              "1.2.3.4"
            ],
            "resource_group_name": "rg-lzaks-hub-weu",
            "tags": {},
            "target_resource_id": "",
            "timeouts": null,
            "ttl": 300,
            "zone_name": "houssem17.com"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "azurerm_dns_zone.dns_zone_parent",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_dns_ns_record",
      "name": "dns_ns_record",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "fqdn": "apps.houssem17.com.",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/houssem17.com/NS/apps",
            "name": "apps",
            "records": [
              "ns1-38.azure-dns.com.",
              "ns2-38.azure-dns.net.",
              "ns3-38.azure-dns.org.",
              "ns4-38.azure-dns.info."
            ],
            "resource_group_name": "rg-lzaks-hub-weu",
            "tags": {},
            "timeouts": null,
            "ttl": 3600,
            "zone_name": "houssem17.com"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "azurerm_dns_zone.dns_zone_apps",
            "azurerm_dns_zone.dns_zone_parent",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_dns_zone",
      "name": "dns_zone_apps",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/apps.houssem17.com",
            "max_number_of_record_sets": 10000,
            "name": "apps.houssem17.com",
            "name_servers": [
              "ns1-38.azure-dns.com.",
              "ns2-38.azure-dns.net.",
              "ns3-38.azure-dns.org.",
              "ns4-38.azure-dns.info."
            ],
            "number_of_record_sets": 3,
            "resource_group_name": "rg-lzaks-hub-weu",
            "soa_record": [
              {
                "email": "azuredns-hostmaster.microsoft.com",
                "expire_time": 2419200,
                "fqdn": "apps.houssem17.com.",
                "host_name": "ns1-38.azure-dns.com.",
                "minimum_ttl": 300,
                "refresh_time": 3600,
                "retry_time": 300,
                "serial_number": 1,
                "tags": {},
                "ttl": 3600
              }
            ],
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "azurerm_dns_zone.dns_zone_parent",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_dns_zone",
      "name": "dns_zone_parent",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/dnsZones/houssem17.com",
            "max_number_of_record_sets": 10000,
            "name": "houssem17.com",
            "name_servers": [
              "ns1-36.azure-dns.com.",
              "ns2-36.azure-dns.net.",
              "ns3-36.azure-dns.org.",
              "ns4-36.azure-dns.info."
            ],
            "number_of_record_sets": 4,
            "resource_group_name": "rg-lzaks-hub-weu",
            "soa_record": [
              {
                "email": "azuredns-hostmaster.microsoft.com",
                "expire_time": 2419200,
                "fqdn": "houssem17.com.",
                "host_name": "ns1-36.azure-dns.com.",
                "minimum_ttl": 300,
                "refresh_time": 3600,
                "retry_time": 300,
                "serial_number": 1,
                "tags": {},
                "ttl": 3600
              }
            ],
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_firewall",
      "name": "firewall",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_proxy_enabled": false,
            "dns_servers": [],
            "firewall_policy_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/azureFirewalls/firewall-hub",
            "ip_configuration": [
              {
                "name": "configuration",
                "private_ip_address": "172.16.0.4",
                "public_ip_address_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/publicIPAddresses/public-ip-firewall",
                "subnet_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureFirewallSubnet"
              }
            ],
            "location": "swedencentral",
            "management_ip_configuration": [],
            "name": "firewall-hub",
            "private_ip_ranges": [],
            "resource_group_name": "rg-lzaks-hub-weu",
            "sku_name": "AZFW_VNet",
            "sku_tier": "Standard",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "threat_intel_mode": "Alert",
            "timeouts": null,
            "virtual_hub": [],
            "zones": [
              "1"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_firewall_policy.firewall_policy",
            "azurerm_public_ip.public_ip_firewall",
            "azurerm_public_ip.public_ip_firewall_mgmt",
            "azurerm_resource_group.rg",
            "azurerm_subnet.subnet_firewall",
            "azurerm_subnet.subnet_firewall_mgmt",
            "azurerm_virtual_network.vnet_hub"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_firewall_policy",
      "name": "firewall_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "auto_learn_private_ranges_enabled": false,
            "base_policy_id": "",
            "child_policies": [],
            "dns": [
              {
                "proxy_enabled": true,
                "servers": [
                  "168.63.129.16"
                ]
              }
            ],
            "explicit_proxy": [],
            "firewalls": [
              "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/azureFirewalls/firewall-hub"
            ],
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy",
            "identity": [],
            "insights": [],
            "intrusion_detection": [],
            "location": "swedencentral",
            "name": "firewall-policy",
            "private_ip_ranges": [],
            "resource_group_name": "rg-lzaks-hub-weu",
            "rule_collection_groups": [
              "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy/ruleCollectionGroups/policy_group_deny"
            ],
            "sku": "Standard",
            "sql_redirect_allowed": null,
            "tags": {},
            "threat_intelligence_allowlist": [],
            "threat_intelligence_mode": "Alert",
            "timeouts": null,
            "tls_certificate": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_firewall_policy_rule_collection_group",
      "name": "policy_group_deny",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "application_rule_collection": [
              {
                "action": "Deny",
                "name": "app_rules_deny_yahoo_com_any_source",
                "priority": 100,
                "rule": [
                  {
                    "description": "",
                    "destination_addresses": [],
                    "destination_fqdn_tags": [],
                    "destination_fqdns": [
                      "*.yahoo.com"
                    ],
                    "destination_urls": [],
                    "http_headers": [],
                    "name": "deny_yahoo_com",
                    "protocols": [
                      {
                        "port": 80,
                        "type": "Http"
                      },
                      {
                        "port": 443,
                        "type": "Https"
                      }
                    ],
                    "source_addresses": [
                      "*"
                    ],
                    "source_ip_groups": [],
                    "terminate_tls": false,
                    "web_categories": []
                  }
                ]
              },
              {
                "action": "Allow",
                "name": "app_rules_allow_githubusercontent_any_source",
                "priority": 101,
                "rule": [
                  {
                    "description": "",
                    "destination_addresses": [],
                    "destination_fqdn_tags": [],
                    "destination_fqdns": [
                      "raw.githubusercontent.com"
                    ],
                    "destination_urls": [],
                    "http_headers": [],
                    "name": "allow_githubusercontent_com",
                    "protocols": [
                      {
                        "port": 80,
                        "type": "Http"
                      },
                      {
                        "port": 443,
                        "type": "Https"
                      }
                    ],
                    "source_addresses": [
                      "*"
                    ],
                    "source_ip_groups": [],
                    "terminate_tls": false,
                    "web_categories": []
                  }
                ]
              }
            ],
            "firewall_policy_id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/firewallPolicies/firewall-policy/ruleCollectionGroups/policy_group_deny",
            "name": "policy_group_deny",
            "nat_rule_collection": [],
            "network_rule_collection": [],
            "priority": 100,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_firewall_policy.firewall_policy",
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "public_ip_bastion",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_method": "Static",
            "ddos_protection_mode": "VirtualNetworkInherited",
            "ddos_protection_plan_id": null,
            "domain_name_label": null,
            "edge_zone": "",
            "fqdn": null,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion",
            "idle_timeout_in_minutes": 4,
            "ip_address": "4.223.125.195",
            "ip_tags": {},
            "ip_version": "IPv4",
            "location": "swedencentral",
            "name": "public-ip-bastion",
            "public_ip_prefix_id": null,
            "resource_group_name": "rg-lzaks-hub-weu",
            "reverse_fqdn": null,
            "sku": "Standard",
            "sku_tier": "Regional",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null,
            "zones": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "public_ip_firewall",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_method": "Static",
            "ddos_protection_mode": "VirtualNetworkInherited",
            "ddos_protection_plan_id": null,
            "domain_name_label": null,
            "edge_zone": "",
            "fqdn": null,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/publicIPAddresses/public-ip-firewall",
            "idle_timeout_in_minutes": 4,
            "ip_address": "51.12.211.169",
            "ip_tags": {},
            "ip_version": "IPv4",
            "location": "swedencentral",
            "name": "public-ip-firewall",
            "public_ip_prefix_id": null,
            "resource_group_name": "rg-lzaks-hub-weu",
            "reverse_fqdn": null,
            "sku": "Standard",
            "sku_tier": "Regional",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null,
            "zones": [
              "1"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "rg",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu",
            "location": "swedencentral",
            "managed_by": "",
            "name": "rg-lzaks-hub-weu",
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_route",
      "name": "route_to_firewall",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address_prefix": "0.0.0.0/0",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/routeTables/route-table-to-firewall/routes/route-to-firewall",
            "name": "route-to-firewall",
            "next_hop_in_ip_address": "172.16.0.4",
            "next_hop_type": "VirtualAppliance",
            "resource_group_name": "rg-lzaks-hub-weu",
            "route_table_name": "route-table-to-firewall",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_firewall.firewall",
            "azurerm_firewall_policy.firewall_policy",
            "azurerm_public_ip.public_ip_firewall",
            "azurerm_public_ip.public_ip_firewall_mgmt",
            "azurerm_resource_group.rg",
            "azurerm_route_table.route_table_to_firewall",
            "azurerm_subnet.subnet_firewall",
            "azurerm_subnet.subnet_firewall_mgmt",
            "azurerm_virtual_network.vnet_hub"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_table_to_firewall",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_bgp_route_propagation": true,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/routeTables/route-table-to-firewall",
            "location": "swedencentral",
            "name": "route-table-to-firewall",
            "resource_group_name": "rg-lzaks-hub-weu",
            "route": [
              {
                "address_prefix": "0.0.0.0/0",
                "name": "route-to-firewall",
                "next_hop_in_ip_address": "172.16.0.4",
                "next_hop_type": "VirtualAppliance"
              }
            ],
            "subnets": [
              "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-vm"
            ],
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnet_bastion",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address_prefixes": [
              "172.16.1.0/27"
            ],
            "delegation": [],
            "enforce_private_link_endpoint_network_policies": false,
            "enforce_private_link_service_network_policies": false,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureBastionSubnet",
            "name": "AzureBastionSubnet",
            "private_endpoint_network_policies_enabled": true,
            "private_link_service_network_policies_enabled": true,
            "resource_group_name": "rg-lzaks-hub-weu",
            "service_endpoint_policy_ids": [],
            "service_endpoints": [],
            "timeouts": null,
            "virtual_network_name": "vnet-hub"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg",
            "azurerm_virtual_network.vnet_hub"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnet_firewall",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address_prefixes": [
              "172.16.0.0/26"
            ],
            "delegation": [],
            "enforce_private_link_endpoint_network_policies": true,
            "enforce_private_link_service_network_policies": false,
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureFirewallSubnet",
            "name": "AzureFirewallSubnet",
            "private_endpoint_network_policies_enabled": false,
            "private_link_service_network_policies_enabled": true,
            "resource_group_name": "rg-lzaks-hub-weu",
            "service_endpoint_policy_ids": [],
            "service_endpoints": [],
            "timeouts": null,
            "virtual_network_name": "vnet-hub"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg",
            "azurerm_virtual_network.vnet_hub"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_virtual_network",
      "name": "vnet_hub",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"].subscription_hub",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address_space": [
              "172.16.0.0/16"
            ],
            "bgp_community": "",
            "ddos_protection_plan": [],
            "dns_servers": [],
            "edge_zone": "",
            "encryption": [],
            "flow_timeout_in_minutes": 0,
            "guid": "503283bd-8847-4acf-8b7b-3af81a168b62",
            "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub",
            "location": "swedencentral",
            "name": "vnet-hub",
            "resource_group_name": "rg-lzaks-hub-weu",
            "subnet": [
              {
                "address_prefix": "172.16.0.0/26",
                "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureFirewallSubnet",
                "name": "AzureFirewallSubnet",
                "security_group": ""
              },
              {
                "address_prefix": "172.16.1.0/27",
                "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/AzureBastionSubnet",
                "name": "AzureBastionSubnet",
                "security_group": ""
              },
              {
                "address_prefix": "172.16.2.0/26",
                "id": "/subscriptions/38977b70-47bf-4da5-a492-88712fce8725/resourceGroups/rg-lzaks-hub-weu/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-vm",
                "name": "subnet-vm",
                "security_group": ""
              }
            ],
            "tags": {
              "architecture": "Hub\u0026Spoke",
              "environment": "development",
              "source": "terraform"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "firewall_monitor_workbook",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6859569023842187592",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "azurerm_resource_group.rg"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "var.firewall_sku_tier",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.firewall_sku_tier",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.domain_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.domain_name",
          "status": "pass"
        }
      ]
    }
  ]
}
